'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("rptLiquidaciones"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class rptLiquidaciones
    Inherits Global.System.Data.DataSet
    
    Private tabledtLiquidacionEstado As dtLiquidacionEstadoDataTable
    
    Private tabledtRptFacturaCabecera As dtRptFacturaCabeceraDataTable
    
    Private tabledtRptFacturaDetalle As dtRptFacturaDetalleDataTable
    
    Private tabledtRptFacturaGuia As dtRptFacturaGuiaDataTable
    
    Private tabledtFacturaCompleta As dtFacturaCompletaDataTable
    
    Private tabledtRptFacturaRemitente As dtRptFacturaRemitenteDataTable
    
    Private tabledtRptFacturaUnidad As dtRptFacturaUnidadDataTable
    
    Private tabledtFacturaDetalle As dtFacturaDetalleDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtLiquidacionEstado")) Is Nothing) Then
                MyBase.Tables.Add(New dtLiquidacionEstadoDataTable(ds.Tables("dtLiquidacionEstado")))
            End If
            If (Not (ds.Tables("dtRptFacturaCabecera")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaCabeceraDataTable(ds.Tables("dtRptFacturaCabecera")))
            End If
            If (Not (ds.Tables("dtRptFacturaDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaDetalleDataTable(ds.Tables("dtRptFacturaDetalle")))
            End If
            If (Not (ds.Tables("dtRptFacturaGuia")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaGuiaDataTable(ds.Tables("dtRptFacturaGuia")))
            End If
            If (Not (ds.Tables("dtFacturaCompleta")) Is Nothing) Then
                MyBase.Tables.Add(New dtFacturaCompletaDataTable(ds.Tables("dtFacturaCompleta")))
            End If
            If (Not (ds.Tables("dtRptFacturaRemitente")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaRemitenteDataTable(ds.Tables("dtRptFacturaRemitente")))
            End If
            If (Not (ds.Tables("dtRptFacturaUnidad")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaUnidadDataTable(ds.Tables("dtRptFacturaUnidad")))
            End If
            If (Not (ds.Tables("dtFacturaDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New dtFacturaDetalleDataTable(ds.Tables("dtFacturaDetalle")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtLiquidacionEstado() As dtLiquidacionEstadoDataTable
        Get
            Return Me.tabledtLiquidacionEstado
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRptFacturaCabecera() As dtRptFacturaCabeceraDataTable
        Get
            Return Me.tabledtRptFacturaCabecera
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRptFacturaDetalle() As dtRptFacturaDetalleDataTable
        Get
            Return Me.tabledtRptFacturaDetalle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRptFacturaGuia() As dtRptFacturaGuiaDataTable
        Get
            Return Me.tabledtRptFacturaGuia
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtFacturaCompleta() As dtFacturaCompletaDataTable
        Get
            Return Me.tabledtFacturaCompleta
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRptFacturaRemitente() As dtRptFacturaRemitenteDataTable
        Get
            Return Me.tabledtRptFacturaRemitente
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRptFacturaUnidad() As dtRptFacturaUnidadDataTable
        Get
            Return Me.tabledtRptFacturaUnidad
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtFacturaDetalle() As dtFacturaDetalleDataTable
        Get
            Return Me.tabledtFacturaDetalle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As rptLiquidaciones = CType(MyBase.Clone,rptLiquidaciones)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtLiquidacionEstado")) Is Nothing) Then
                MyBase.Tables.Add(New dtLiquidacionEstadoDataTable(ds.Tables("dtLiquidacionEstado")))
            End If
            If (Not (ds.Tables("dtRptFacturaCabecera")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaCabeceraDataTable(ds.Tables("dtRptFacturaCabecera")))
            End If
            If (Not (ds.Tables("dtRptFacturaDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaDetalleDataTable(ds.Tables("dtRptFacturaDetalle")))
            End If
            If (Not (ds.Tables("dtRptFacturaGuia")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaGuiaDataTable(ds.Tables("dtRptFacturaGuia")))
            End If
            If (Not (ds.Tables("dtFacturaCompleta")) Is Nothing) Then
                MyBase.Tables.Add(New dtFacturaCompletaDataTable(ds.Tables("dtFacturaCompleta")))
            End If
            If (Not (ds.Tables("dtRptFacturaRemitente")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaRemitenteDataTable(ds.Tables("dtRptFacturaRemitente")))
            End If
            If (Not (ds.Tables("dtRptFacturaUnidad")) Is Nothing) Then
                MyBase.Tables.Add(New dtRptFacturaUnidadDataTable(ds.Tables("dtRptFacturaUnidad")))
            End If
            If (Not (ds.Tables("dtFacturaDetalle")) Is Nothing) Then
                MyBase.Tables.Add(New dtFacturaDetalleDataTable(ds.Tables("dtFacturaDetalle")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtLiquidacionEstado = CType(MyBase.Tables("dtLiquidacionEstado"),dtLiquidacionEstadoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtLiquidacionEstado) Is Nothing) Then
                Me.tabledtLiquidacionEstado.InitVars
            End If
        End If
        Me.tabledtRptFacturaCabecera = CType(MyBase.Tables("dtRptFacturaCabecera"),dtRptFacturaCabeceraDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRptFacturaCabecera) Is Nothing) Then
                Me.tabledtRptFacturaCabecera.InitVars
            End If
        End If
        Me.tabledtRptFacturaDetalle = CType(MyBase.Tables("dtRptFacturaDetalle"),dtRptFacturaDetalleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRptFacturaDetalle) Is Nothing) Then
                Me.tabledtRptFacturaDetalle.InitVars
            End If
        End If
        Me.tabledtRptFacturaGuia = CType(MyBase.Tables("dtRptFacturaGuia"),dtRptFacturaGuiaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRptFacturaGuia) Is Nothing) Then
                Me.tabledtRptFacturaGuia.InitVars
            End If
        End If
        Me.tabledtFacturaCompleta = CType(MyBase.Tables("dtFacturaCompleta"),dtFacturaCompletaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtFacturaCompleta) Is Nothing) Then
                Me.tabledtFacturaCompleta.InitVars
            End If
        End If
        Me.tabledtRptFacturaRemitente = CType(MyBase.Tables("dtRptFacturaRemitente"),dtRptFacturaRemitenteDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRptFacturaRemitente) Is Nothing) Then
                Me.tabledtRptFacturaRemitente.InitVars
            End If
        End If
        Me.tabledtRptFacturaUnidad = CType(MyBase.Tables("dtRptFacturaUnidad"),dtRptFacturaUnidadDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRptFacturaUnidad) Is Nothing) Then
                Me.tabledtRptFacturaUnidad.InitVars
            End If
        End If
        Me.tabledtFacturaDetalle = CType(MyBase.Tables("dtFacturaDetalle"),dtFacturaDetalleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtFacturaDetalle) Is Nothing) Then
                Me.tabledtFacturaDetalle.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "rptLiquidaciones"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/rptLiquidaciones.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtLiquidacionEstado = New dtLiquidacionEstadoDataTable()
        MyBase.Tables.Add(Me.tabledtLiquidacionEstado)
        Me.tabledtRptFacturaCabecera = New dtRptFacturaCabeceraDataTable()
        MyBase.Tables.Add(Me.tabledtRptFacturaCabecera)
        Me.tabledtRptFacturaDetalle = New dtRptFacturaDetalleDataTable()
        MyBase.Tables.Add(Me.tabledtRptFacturaDetalle)
        Me.tabledtRptFacturaGuia = New dtRptFacturaGuiaDataTable()
        MyBase.Tables.Add(Me.tabledtRptFacturaGuia)
        Me.tabledtFacturaCompleta = New dtFacturaCompletaDataTable()
        MyBase.Tables.Add(Me.tabledtFacturaCompleta)
        Me.tabledtRptFacturaRemitente = New dtRptFacturaRemitenteDataTable()
        MyBase.Tables.Add(Me.tabledtRptFacturaRemitente)
        Me.tabledtRptFacturaUnidad = New dtRptFacturaUnidadDataTable()
        MyBase.Tables.Add(Me.tabledtRptFacturaUnidad)
        Me.tabledtFacturaDetalle = New dtFacturaDetalleDataTable()
        MyBase.Tables.Add(Me.tabledtFacturaDetalle)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtLiquidacionEstado() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtRptFacturaCabecera() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtRptFacturaDetalle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtRptFacturaGuia() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtFacturaCompleta() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtRptFacturaRemitente() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtRptFacturaUnidad() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializedtFacturaDetalle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As rptLiquidaciones = New rptLiquidaciones()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtLiquidacionEstadoRowChangeEventHandler(ByVal sender As Object, ByVal e As dtLiquidacionEstadoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtRptFacturaCabeceraRowChangeEventHandler(ByVal sender As Object, ByVal e As dtRptFacturaCabeceraRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtRptFacturaDetalleRowChangeEventHandler(ByVal sender As Object, ByVal e As dtRptFacturaDetalleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtRptFacturaGuiaRowChangeEventHandler(ByVal sender As Object, ByVal e As dtRptFacturaGuiaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtFacturaCompletaRowChangeEventHandler(ByVal sender As Object, ByVal e As dtFacturaCompletaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtRptFacturaRemitenteRowChangeEventHandler(ByVal sender As Object, ByVal e As dtRptFacturaRemitenteRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtRptFacturaUnidadRowChangeEventHandler(ByVal sender As Object, ByVal e As dtRptFacturaUnidadRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub dtFacturaDetalleRowChangeEventHandler(ByVal sender As Object, ByVal e As dtFacturaDetalleRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtLiquidacionEstadoDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtLiquidacionEstadoRow)
        
        Private columnCODIGO_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnNUMERO_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnDETALLE_GUIA As Global.System.Data.DataColumn
        
        Private columnPLACA_UNIDAD As Global.System.Data.DataColumn
        
        Private columnExpr2 As Global.System.Data.DataColumn
        
        Private columnORIGEN_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnDESTINO_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnFECHA_SALIDA As Global.System.Data.DataColumn
        
        Private columnFECHA_LLEGADA As Global.System.Data.DataColumn
        
        Private columnDINERO_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnPEAJES_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnVIATICOS_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnGUARDIANIA_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnHOSPEDAJE_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnBALANZA_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnOTROS_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnCONSUMO_FISICO_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnCONSUMO_VIRTUAL_LIQUIDACION As Global.System.Data.DataColumn
        
        Private columnDETALLE_ESTADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtLiquidacionEstado"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NUMERO_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_GUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_GUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PLACA_UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACA_UNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Expr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORIGEN_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESTINO_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINO_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHA_SALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_SALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHA_LLEGADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_LLEGADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DINERO_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDINERO_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PEAJES_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEAJES_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VIATICOS_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIATICOS_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GUARDIANIA_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUARDIANIA_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HOSPEDAJE_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOSPEDAJE_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BALANZA_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBALANZA_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OTROS_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CONSUMO_FISICO_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSUMO_FISICO_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CONSUMO_VIRTUAL_LIQUIDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSUMO_VIRTUAL_LIQUIDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtLiquidacionEstadoRow
            Get
                Return CType(Me.Rows(index),dtLiquidacionEstadoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtLiquidacionEstadoRowChanging As dtLiquidacionEstadoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtLiquidacionEstadoRowChanged As dtLiquidacionEstadoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtLiquidacionEstadoRowDeleting As dtLiquidacionEstadoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtLiquidacionEstadoRowDeleted As dtLiquidacionEstadoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtLiquidacionEstadoRow(ByVal row As dtLiquidacionEstadoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtLiquidacionEstadoRow( _
                    ByVal NUMERO_LIQUIDACION As String,  _
                    ByVal Expr1 As String,  _
                    ByVal DETALLE_GUIA As String,  _
                    ByVal PLACA_UNIDAD As String,  _
                    ByVal Expr2 As String,  _
                    ByVal ORIGEN_LIQUIDACION As String,  _
                    ByVal DESTINO_LIQUIDACION As String,  _
                    ByVal FECHA_SALIDA As Date,  _
                    ByVal FECHA_LLEGADA As Date,  _
                    ByVal DINERO_LIQUIDACION As Decimal,  _
                    ByVal PEAJES_LIQUIDACION As Decimal,  _
                    ByVal VIATICOS_LIQUIDACION As Decimal,  _
                    ByVal GUARDIANIA_LIQUIDACION As Decimal,  _
                    ByVal HOSPEDAJE_LIQUIDACION As Decimal,  _
                    ByVal BALANZA_LIQUIDACION As Decimal,  _
                    ByVal OTROS_LIQUIDACION As Decimal,  _
                    ByVal CONSUMO_FISICO_LIQUIDACION As Decimal,  _
                    ByVal CONSUMO_VIRTUAL_LIQUIDACION As Decimal,  _
                    ByVal DETALLE_ESTADO As String) As dtLiquidacionEstadoRow
            Dim rowdtLiquidacionEstadoRow As dtLiquidacionEstadoRow = CType(Me.NewRow,dtLiquidacionEstadoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NUMERO_LIQUIDACION, Expr1, DETALLE_GUIA, PLACA_UNIDAD, Expr2, ORIGEN_LIQUIDACION, DESTINO_LIQUIDACION, FECHA_SALIDA, FECHA_LLEGADA, DINERO_LIQUIDACION, PEAJES_LIQUIDACION, VIATICOS_LIQUIDACION, GUARDIANIA_LIQUIDACION, HOSPEDAJE_LIQUIDACION, BALANZA_LIQUIDACION, OTROS_LIQUIDACION, CONSUMO_FISICO_LIQUIDACION, CONSUMO_VIRTUAL_LIQUIDACION, DETALLE_ESTADO}
            rowdtLiquidacionEstadoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtLiquidacionEstadoRow)
            Return rowdtLiquidacionEstadoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCODIGO_LIQUIDACION(ByVal CODIGO_LIQUIDACION As Integer) As dtLiquidacionEstadoRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_LIQUIDACION}),dtLiquidacionEstadoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtLiquidacionEstadoDataTable = CType(MyBase.Clone,dtLiquidacionEstadoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtLiquidacionEstadoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO_LIQUIDACION = MyBase.Columns("CODIGO_LIQUIDACION")
            Me.columnNUMERO_LIQUIDACION = MyBase.Columns("NUMERO_LIQUIDACION")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnDETALLE_GUIA = MyBase.Columns("DETALLE_GUIA")
            Me.columnPLACA_UNIDAD = MyBase.Columns("PLACA_UNIDAD")
            Me.columnExpr2 = MyBase.Columns("Expr2")
            Me.columnORIGEN_LIQUIDACION = MyBase.Columns("ORIGEN_LIQUIDACION")
            Me.columnDESTINO_LIQUIDACION = MyBase.Columns("DESTINO_LIQUIDACION")
            Me.columnFECHA_SALIDA = MyBase.Columns("FECHA_SALIDA")
            Me.columnFECHA_LLEGADA = MyBase.Columns("FECHA_LLEGADA")
            Me.columnDINERO_LIQUIDACION = MyBase.Columns("DINERO_LIQUIDACION")
            Me.columnPEAJES_LIQUIDACION = MyBase.Columns("PEAJES_LIQUIDACION")
            Me.columnVIATICOS_LIQUIDACION = MyBase.Columns("VIATICOS_LIQUIDACION")
            Me.columnGUARDIANIA_LIQUIDACION = MyBase.Columns("GUARDIANIA_LIQUIDACION")
            Me.columnHOSPEDAJE_LIQUIDACION = MyBase.Columns("HOSPEDAJE_LIQUIDACION")
            Me.columnBALANZA_LIQUIDACION = MyBase.Columns("BALANZA_LIQUIDACION")
            Me.columnOTROS_LIQUIDACION = MyBase.Columns("OTROS_LIQUIDACION")
            Me.columnCONSUMO_FISICO_LIQUIDACION = MyBase.Columns("CONSUMO_FISICO_LIQUIDACION")
            Me.columnCONSUMO_VIRTUAL_LIQUIDACION = MyBase.Columns("CONSUMO_VIRTUAL_LIQUIDACION")
            Me.columnDETALLE_ESTADO = MyBase.Columns("DETALLE_ESTADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO_LIQUIDACION = New Global.System.Data.DataColumn("CODIGO_LIQUIDACION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_LIQUIDACION)
            Me.columnNUMERO_LIQUIDACION = New Global.System.Data.DataColumn("NUMERO_LIQUIDACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_LIQUIDACION)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnDETALLE_GUIA = New Global.System.Data.DataColumn("DETALLE_GUIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_GUIA)
            Me.columnPLACA_UNIDAD = New Global.System.Data.DataColumn("PLACA_UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACA_UNIDAD)
            Me.columnExpr2 = New Global.System.Data.DataColumn("Expr2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.columnORIGEN_LIQUIDACION = New Global.System.Data.DataColumn("ORIGEN_LIQUIDACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN_LIQUIDACION)
            Me.columnDESTINO_LIQUIDACION = New Global.System.Data.DataColumn("DESTINO_LIQUIDACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINO_LIQUIDACION)
            Me.columnFECHA_SALIDA = New Global.System.Data.DataColumn("FECHA_SALIDA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_SALIDA)
            Me.columnFECHA_LLEGADA = New Global.System.Data.DataColumn("FECHA_LLEGADA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_LLEGADA)
            Me.columnDINERO_LIQUIDACION = New Global.System.Data.DataColumn("DINERO_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDINERO_LIQUIDACION)
            Me.columnPEAJES_LIQUIDACION = New Global.System.Data.DataColumn("PEAJES_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEAJES_LIQUIDACION)
            Me.columnVIATICOS_LIQUIDACION = New Global.System.Data.DataColumn("VIATICOS_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIATICOS_LIQUIDACION)
            Me.columnGUARDIANIA_LIQUIDACION = New Global.System.Data.DataColumn("GUARDIANIA_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUARDIANIA_LIQUIDACION)
            Me.columnHOSPEDAJE_LIQUIDACION = New Global.System.Data.DataColumn("HOSPEDAJE_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOSPEDAJE_LIQUIDACION)
            Me.columnBALANZA_LIQUIDACION = New Global.System.Data.DataColumn("BALANZA_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBALANZA_LIQUIDACION)
            Me.columnOTROS_LIQUIDACION = New Global.System.Data.DataColumn("OTROS_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS_LIQUIDACION)
            Me.columnCONSUMO_FISICO_LIQUIDACION = New Global.System.Data.DataColumn("CONSUMO_FISICO_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSUMO_FISICO_LIQUIDACION)
            Me.columnCONSUMO_VIRTUAL_LIQUIDACION = New Global.System.Data.DataColumn("CONSUMO_VIRTUAL_LIQUIDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSUMO_VIRTUAL_LIQUIDACION)
            Me.columnDETALLE_ESTADO = New Global.System.Data.DataColumn("DETALLE_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_ESTADO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_LIQUIDACION}, true))
            Me.columnCODIGO_LIQUIDACION.AutoIncrement = true
            Me.columnCODIGO_LIQUIDACION.AutoIncrementSeed = -1
            Me.columnCODIGO_LIQUIDACION.AutoIncrementStep = -1
            Me.columnCODIGO_LIQUIDACION.AllowDBNull = false
            Me.columnCODIGO_LIQUIDACION.ReadOnly = true
            Me.columnCODIGO_LIQUIDACION.Unique = true
            Me.columnNUMERO_LIQUIDACION.MaxLength = 6
            Me.columnExpr1.ReadOnly = true
            Me.columnExpr1.MaxLength = 123
            Me.columnDETALLE_GUIA.MaxLength = 11
            Me.columnPLACA_UNIDAD.MaxLength = 6
            Me.columnExpr2.MaxLength = 6
            Me.columnORIGEN_LIQUIDACION.MaxLength = 300
            Me.columnDESTINO_LIQUIDACION.MaxLength = 300
            Me.columnDETALLE_ESTADO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtLiquidacionEstadoRow() As dtLiquidacionEstadoRow
            Return CType(Me.NewRow,dtLiquidacionEstadoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtLiquidacionEstadoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtLiquidacionEstadoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtLiquidacionEstadoRowChangedEvent) Is Nothing) Then
                RaiseEvent dtLiquidacionEstadoRowChanged(Me, New dtLiquidacionEstadoRowChangeEvent(CType(e.Row,dtLiquidacionEstadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtLiquidacionEstadoRowChangingEvent) Is Nothing) Then
                RaiseEvent dtLiquidacionEstadoRowChanging(Me, New dtLiquidacionEstadoRowChangeEvent(CType(e.Row,dtLiquidacionEstadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtLiquidacionEstadoRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtLiquidacionEstadoRowDeleted(Me, New dtLiquidacionEstadoRowChangeEvent(CType(e.Row,dtLiquidacionEstadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtLiquidacionEstadoRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtLiquidacionEstadoRowDeleting(Me, New dtLiquidacionEstadoRowChangeEvent(CType(e.Row,dtLiquidacionEstadoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtLiquidacionEstadoRow(ByVal row As dtLiquidacionEstadoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtLiquidacionEstadoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRptFacturaCabeceraDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRptFacturaCabeceraRow)
        
        Private columnRAZON_CLIENTE As Global.System.Data.DataColumn
        
        Private columnDIRECCION_CLIENTE As Global.System.Data.DataColumn
        
        Private columnRUC_CLIENTE As Global.System.Data.DataColumn
        
        Private columnFECHA_FACTURA As Global.System.Data.DataColumn
        
        Private columnDETALLE_MONEDA As Global.System.Data.DataColumn
        
        Private columnTOTAL_FACTURA As Global.System.Data.DataColumn
        
        Private columnTOTAL_FACTURA_LETRA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL As Global.System.Data.DataColumn
        
        Private columnIGV As Global.System.Data.DataColumn
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_MONEDA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRptFacturaCabecera"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RAZON_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIRECCION_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RUC_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHA_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_FACTURA_LETRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_FACTURA_LETRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SUBTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IGVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIGV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRptFacturaCabeceraRow
            Get
                Return CType(Me.Rows(index),dtRptFacturaCabeceraRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaCabeceraRowChanging As dtRptFacturaCabeceraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaCabeceraRowChanged As dtRptFacturaCabeceraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaCabeceraRowDeleting As dtRptFacturaCabeceraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaCabeceraRowDeleted As dtRptFacturaCabeceraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtRptFacturaCabeceraRow(ByVal row As dtRptFacturaCabeceraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtRptFacturaCabeceraRow(ByVal RAZON_CLIENTE As String, ByVal DIRECCION_CLIENTE As String, ByVal RUC_CLIENTE As String, ByVal FECHA_FACTURA As Date, ByVal DETALLE_MONEDA As String, ByVal TOTAL_FACTURA As Decimal, ByVal TOTAL_FACTURA_LETRA As String, ByVal SUBTOTAL As Decimal, ByVal IGV As Decimal, ByVal CODIGO_MONEDA As Integer) As dtRptFacturaCabeceraRow
            Dim rowdtRptFacturaCabeceraRow As dtRptFacturaCabeceraRow = CType(Me.NewRow,dtRptFacturaCabeceraRow)
            Dim columnValuesArray() As Object = New Object() {RAZON_CLIENTE, DIRECCION_CLIENTE, RUC_CLIENTE, FECHA_FACTURA, DETALLE_MONEDA, TOTAL_FACTURA, TOTAL_FACTURA_LETRA, SUBTOTAL, IGV, Nothing, CODIGO_MONEDA}
            rowdtRptFacturaCabeceraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRptFacturaCabeceraRow)
            Return rowdtRptFacturaCabeceraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCODIGO_FACTURA(ByVal CODIGO_FACTURA As Integer) As dtRptFacturaCabeceraRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_FACTURA}),dtRptFacturaCabeceraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRptFacturaCabeceraDataTable = CType(MyBase.Clone,dtRptFacturaCabeceraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRptFacturaCabeceraDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRAZON_CLIENTE = MyBase.Columns("RAZON_CLIENTE")
            Me.columnDIRECCION_CLIENTE = MyBase.Columns("DIRECCION_CLIENTE")
            Me.columnRUC_CLIENTE = MyBase.Columns("RUC_CLIENTE")
            Me.columnFECHA_FACTURA = MyBase.Columns("FECHA_FACTURA")
            Me.columnDETALLE_MONEDA = MyBase.Columns("DETALLE_MONEDA")
            Me.columnTOTAL_FACTURA = MyBase.Columns("TOTAL_FACTURA")
            Me.columnTOTAL_FACTURA_LETRA = MyBase.Columns("TOTAL_FACTURA_LETRA")
            Me.columnSUBTOTAL = MyBase.Columns("SUBTOTAL")
            Me.columnIGV = MyBase.Columns("IGV")
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_MONEDA = MyBase.Columns("CODIGO_MONEDA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRAZON_CLIENTE = New Global.System.Data.DataColumn("RAZON_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_CLIENTE)
            Me.columnDIRECCION_CLIENTE = New Global.System.Data.DataColumn("DIRECCION_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_CLIENTE)
            Me.columnRUC_CLIENTE = New Global.System.Data.DataColumn("RUC_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CLIENTE)
            Me.columnFECHA_FACTURA = New Global.System.Data.DataColumn("FECHA_FACTURA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_FACTURA)
            Me.columnDETALLE_MONEDA = New Global.System.Data.DataColumn("DETALLE_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_MONEDA)
            Me.columnTOTAL_FACTURA = New Global.System.Data.DataColumn("TOTAL_FACTURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_FACTURA)
            Me.columnTOTAL_FACTURA_LETRA = New Global.System.Data.DataColumn("TOTAL_FACTURA_LETRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_FACTURA_LETRA)
            Me.columnSUBTOTAL = New Global.System.Data.DataColumn("SUBTOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL)
            Me.columnIGV = New Global.System.Data.DataColumn("IGV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIGV)
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_MONEDA = New Global.System.Data.DataColumn("CODIGO_MONEDA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MONEDA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_FACTURA}, true))
            Me.columnRAZON_CLIENTE.MaxLength = 400
            Me.columnDIRECCION_CLIENTE.MaxLength = 400
            Me.columnRUC_CLIENTE.MaxLength = 11
            Me.columnDETALLE_MONEDA.MaxLength = 18
            Me.columnTOTAL_FACTURA_LETRA.ReadOnly = true
            Me.columnTOTAL_FACTURA_LETRA.MaxLength = 180
            Me.columnSUBTOTAL.ReadOnly = true
            Me.columnIGV.ReadOnly = true
            Me.columnCODIGO_FACTURA.AutoIncrement = true
            Me.columnCODIGO_FACTURA.AutoIncrementSeed = -1
            Me.columnCODIGO_FACTURA.AutoIncrementStep = -1
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_FACTURA.ReadOnly = true
            Me.columnCODIGO_FACTURA.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtRptFacturaCabeceraRow() As dtRptFacturaCabeceraRow
            Return CType(Me.NewRow,dtRptFacturaCabeceraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRptFacturaCabeceraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRptFacturaCabeceraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRptFacturaCabeceraRowChangedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaCabeceraRowChanged(Me, New dtRptFacturaCabeceraRowChangeEvent(CType(e.Row,dtRptFacturaCabeceraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRptFacturaCabeceraRowChangingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaCabeceraRowChanging(Me, New dtRptFacturaCabeceraRowChangeEvent(CType(e.Row,dtRptFacturaCabeceraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRptFacturaCabeceraRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaCabeceraRowDeleted(Me, New dtRptFacturaCabeceraRowChangeEvent(CType(e.Row,dtRptFacturaCabeceraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRptFacturaCabeceraRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaCabeceraRowDeleting(Me, New dtRptFacturaCabeceraRowChangeEvent(CType(e.Row,dtRptFacturaCabeceraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtRptFacturaCabeceraRow(ByVal row As dtRptFacturaCabeceraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRptFacturaCabeceraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRptFacturaDetalleDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRptFacturaDetalleRow)
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnCONF_VEHICULAR As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnPRECIO_UNITARIO As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnDESTINO As Global.System.Data.DataColumn
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_DETALLE_FACTURA As Global.System.Data.DataColumn
        
        Private columnDETALLE_ESTADO As Global.System.Data.DataColumn
        
        Private columnRAZON_CLIENTE As Global.System.Data.DataColumn
        
        Private columnDIRECCION_CLIENTE As Global.System.Data.DataColumn
        
        Private columnRUC_CLIENTE As Global.System.Data.DataColumn
        
        Private columnTELEFONO_CLIENTE As Global.System.Data.DataColumn
        
        Private columnTOTAL_FACTURA As Global.System.Data.DataColumn
        
        Private columnDETALLE_MONEDA As Global.System.Data.DataColumn
        
        Private columnNRO_LETRA As Global.System.Data.DataColumn
        
        Private columnFECHA_FACTURA As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnVALOR_REFERENCIAL As Global.System.Data.DataColumn
        
        Private columnTIPO_SERVICIO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRptFacturaDetalle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CONF_VEHICULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONF_VEHICULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRECIO_UNITARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_UNITARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_DETALLE_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DETALLE_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RAZON_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIRECCION_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RUC_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TELEFONO_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NRO_LETRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_LETRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHA_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VALOR_REFERENCIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_REFERENCIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TIPO_SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRptFacturaDetalleRow
            Get
                Return CType(Me.Rows(index),dtRptFacturaDetalleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaDetalleRowChanging As dtRptFacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaDetalleRowChanged As dtRptFacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaDetalleRowDeleting As dtRptFacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaDetalleRowDeleted As dtRptFacturaDetalleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtRptFacturaDetalleRow(ByVal row As dtRptFacturaDetalleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtRptFacturaDetalleRow( _
                    ByVal CANTIDAD As Integer,  _
                    ByVal CONF_VEHICULAR As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal PRECIO_UNITARIO As Decimal,  _
                    ByVal ORIGEN As String,  _
                    ByVal DESTINO As String,  _
                    ByVal CODIGO_FACTURA As Integer,  _
                    ByVal DETALLE_ESTADO As String,  _
                    ByVal RAZON_CLIENTE As String,  _
                    ByVal DIRECCION_CLIENTE As String,  _
                    ByVal RUC_CLIENTE As String,  _
                    ByVal TELEFONO_CLIENTE As String,  _
                    ByVal TOTAL_FACTURA As Decimal,  _
                    ByVal DETALLE_MONEDA As String,  _
                    ByVal NRO_LETRA As String,  _
                    ByVal FECHA_FACTURA As Date,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal VALOR_REFERENCIAL As Decimal,  _
                    ByVal TIPO_SERVICIO As Integer) As dtRptFacturaDetalleRow
            Dim rowdtRptFacturaDetalleRow As dtRptFacturaDetalleRow = CType(Me.NewRow,dtRptFacturaDetalleRow)
            Dim columnValuesArray() As Object = New Object() {CANTIDAD, CONF_VEHICULAR, OBSERVACION, PRECIO_UNITARIO, ORIGEN, DESTINO, CODIGO_FACTURA, Nothing, DETALLE_ESTADO, RAZON_CLIENTE, DIRECCION_CLIENTE, RUC_CLIENTE, TELEFONO_CLIENTE, TOTAL_FACTURA, DETALLE_MONEDA, NRO_LETRA, FECHA_FACTURA, DESCRIPCION, VALOR_REFERENCIAL, TIPO_SERVICIO}
            rowdtRptFacturaDetalleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRptFacturaDetalleRow)
            Return rowdtRptFacturaDetalleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCODIGO_FACTURACODIGO_DETALLE_FACTURA(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer) As dtRptFacturaDetalleRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_FACTURA, CODIGO_DETALLE_FACTURA}),dtRptFacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRptFacturaDetalleDataTable = CType(MyBase.Clone,dtRptFacturaDetalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRptFacturaDetalleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnCONF_VEHICULAR = MyBase.Columns("CONF_VEHICULAR")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnPRECIO_UNITARIO = MyBase.Columns("PRECIO_UNITARIO")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnDESTINO = MyBase.Columns("DESTINO")
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_DETALLE_FACTURA = MyBase.Columns("CODIGO_DETALLE_FACTURA")
            Me.columnDETALLE_ESTADO = MyBase.Columns("DETALLE_ESTADO")
            Me.columnRAZON_CLIENTE = MyBase.Columns("RAZON_CLIENTE")
            Me.columnDIRECCION_CLIENTE = MyBase.Columns("DIRECCION_CLIENTE")
            Me.columnRUC_CLIENTE = MyBase.Columns("RUC_CLIENTE")
            Me.columnTELEFONO_CLIENTE = MyBase.Columns("TELEFONO_CLIENTE")
            Me.columnTOTAL_FACTURA = MyBase.Columns("TOTAL_FACTURA")
            Me.columnDETALLE_MONEDA = MyBase.Columns("DETALLE_MONEDA")
            Me.columnNRO_LETRA = MyBase.Columns("NRO_LETRA")
            Me.columnFECHA_FACTURA = MyBase.Columns("FECHA_FACTURA")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnVALOR_REFERENCIAL = MyBase.Columns("VALOR_REFERENCIAL")
            Me.columnTIPO_SERVICIO = MyBase.Columns("TIPO_SERVICIO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnCONF_VEHICULAR = New Global.System.Data.DataColumn("CONF_VEHICULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONF_VEHICULAR)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnPRECIO_UNITARIO = New Global.System.Data.DataColumn("PRECIO_UNITARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_UNITARIO)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnDESTINO = New Global.System.Data.DataColumn("DESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINO)
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_DETALLE_FACTURA = New Global.System.Data.DataColumn("CODIGO_DETALLE_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DETALLE_FACTURA)
            Me.columnDETALLE_ESTADO = New Global.System.Data.DataColumn("DETALLE_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_ESTADO)
            Me.columnRAZON_CLIENTE = New Global.System.Data.DataColumn("RAZON_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_CLIENTE)
            Me.columnDIRECCION_CLIENTE = New Global.System.Data.DataColumn("DIRECCION_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_CLIENTE)
            Me.columnRUC_CLIENTE = New Global.System.Data.DataColumn("RUC_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CLIENTE)
            Me.columnTELEFONO_CLIENTE = New Global.System.Data.DataColumn("TELEFONO_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_CLIENTE)
            Me.columnTOTAL_FACTURA = New Global.System.Data.DataColumn("TOTAL_FACTURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_FACTURA)
            Me.columnDETALLE_MONEDA = New Global.System.Data.DataColumn("DETALLE_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_MONEDA)
            Me.columnNRO_LETRA = New Global.System.Data.DataColumn("NRO_LETRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_LETRA)
            Me.columnFECHA_FACTURA = New Global.System.Data.DataColumn("FECHA_FACTURA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_FACTURA)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnVALOR_REFERENCIAL = New Global.System.Data.DataColumn("VALOR_REFERENCIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_REFERENCIAL)
            Me.columnTIPO_SERVICIO = New Global.System.Data.DataColumn("TIPO_SERVICIO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SERVICIO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_FACTURA, Me.columnCODIGO_DETALLE_FACTURA}, true))
            Me.columnCONF_VEHICULAR.MaxLength = 20
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnORIGEN.MaxLength = 150
            Me.columnDESTINO.MaxLength = 150
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrement = true
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrementSeed = -1
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrementStep = -1
            Me.columnCODIGO_DETALLE_FACTURA.AllowDBNull = false
            Me.columnCODIGO_DETALLE_FACTURA.ReadOnly = true
            Me.columnDETALLE_ESTADO.MaxLength = 50
            Me.columnRAZON_CLIENTE.MaxLength = 400
            Me.columnDIRECCION_CLIENTE.MaxLength = 400
            Me.columnRUC_CLIENTE.MaxLength = 11
            Me.columnTELEFONO_CLIENTE.MaxLength = 9
            Me.columnDETALLE_MONEDA.MaxLength = 18
            Me.columnNRO_LETRA.ReadOnly = true
            Me.columnNRO_LETRA.Caption = "Column1"
            Me.columnNRO_LETRA.MaxLength = 180
            Me.columnDESCRIPCION.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtRptFacturaDetalleRow() As dtRptFacturaDetalleRow
            Return CType(Me.NewRow,dtRptFacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRptFacturaDetalleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRptFacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRptFacturaDetalleRowChangedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaDetalleRowChanged(Me, New dtRptFacturaDetalleRowChangeEvent(CType(e.Row,dtRptFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRptFacturaDetalleRowChangingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaDetalleRowChanging(Me, New dtRptFacturaDetalleRowChangeEvent(CType(e.Row,dtRptFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRptFacturaDetalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaDetalleRowDeleted(Me, New dtRptFacturaDetalleRowChangeEvent(CType(e.Row,dtRptFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRptFacturaDetalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaDetalleRowDeleting(Me, New dtRptFacturaDetalleRowChangeEvent(CType(e.Row,dtRptFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtRptFacturaDetalleRow(ByVal row As dtRptFacturaDetalleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRptFacturaDetalleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRptFacturaGuiaDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRptFacturaGuiaRow)
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_DETALLE_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_GUIA As Global.System.Data.DataColumn
        
        Private columnDETALLE_GUIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRptFacturaGuia"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_DETALLE_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DETALLE_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_GUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_GUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_GUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_GUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRptFacturaGuiaRow
            Get
                Return CType(Me.Rows(index),dtRptFacturaGuiaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaGuiaRowChanging As dtRptFacturaGuiaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaGuiaRowChanged As dtRptFacturaGuiaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaGuiaRowDeleting As dtRptFacturaGuiaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaGuiaRowDeleted As dtRptFacturaGuiaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtRptFacturaGuiaRow(ByVal row As dtRptFacturaGuiaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtRptFacturaGuiaRow(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal DETALLE_GUIA As String) As dtRptFacturaGuiaRow
            Dim rowdtRptFacturaGuiaRow As dtRptFacturaGuiaRow = CType(Me.NewRow,dtRptFacturaGuiaRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, Nothing, DETALLE_GUIA}
            rowdtRptFacturaGuiaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRptFacturaGuiaRow)
            Return rowdtRptFacturaGuiaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRptFacturaGuiaDataTable = CType(MyBase.Clone,dtRptFacturaGuiaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRptFacturaGuiaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_DETALLE_FACTURA = MyBase.Columns("CODIGO_DETALLE_FACTURA")
            Me.columnCODIGO_GUIA = MyBase.Columns("CODIGO_GUIA")
            Me.columnDETALLE_GUIA = MyBase.Columns("DETALLE_GUIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_DETALLE_FACTURA = New Global.System.Data.DataColumn("CODIGO_DETALLE_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DETALLE_FACTURA)
            Me.columnCODIGO_GUIA = New Global.System.Data.DataColumn("CODIGO_GUIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_GUIA)
            Me.columnDETALLE_GUIA = New Global.System.Data.DataColumn("DETALLE_GUIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_GUIA)
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_DETALLE_FACTURA.AllowDBNull = false
            Me.columnCODIGO_GUIA.AutoIncrement = true
            Me.columnCODIGO_GUIA.AutoIncrementSeed = -1
            Me.columnCODIGO_GUIA.AutoIncrementStep = -1
            Me.columnCODIGO_GUIA.ReadOnly = true
            Me.columnDETALLE_GUIA.MaxLength = 11
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtRptFacturaGuiaRow() As dtRptFacturaGuiaRow
            Return CType(Me.NewRow,dtRptFacturaGuiaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRptFacturaGuiaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRptFacturaGuiaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRptFacturaGuiaRowChangedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaGuiaRowChanged(Me, New dtRptFacturaGuiaRowChangeEvent(CType(e.Row,dtRptFacturaGuiaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRptFacturaGuiaRowChangingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaGuiaRowChanging(Me, New dtRptFacturaGuiaRowChangeEvent(CType(e.Row,dtRptFacturaGuiaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRptFacturaGuiaRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaGuiaRowDeleted(Me, New dtRptFacturaGuiaRowChangeEvent(CType(e.Row,dtRptFacturaGuiaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRptFacturaGuiaRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaGuiaRowDeleting(Me, New dtRptFacturaGuiaRowChangeEvent(CType(e.Row,dtRptFacturaGuiaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtRptFacturaGuiaRow(ByVal row As dtRptFacturaGuiaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRptFacturaGuiaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtFacturaCompletaDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtFacturaCompletaRow)
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_CLIENTE As Global.System.Data.DataColumn
        
        Private columnRAZON_CLIENTE As Global.System.Data.DataColumn
        
        Private columnRUC_CLIENTE As Global.System.Data.DataColumn
        
        Private columnDIRECCION_CLIENTE As Global.System.Data.DataColumn
        
        Private columnTELEFONO_CLIENTE As Global.System.Data.DataColumn
        
        Private columnCODIGO_MONEDA As Global.System.Data.DataColumn
        
        Private columnFECHA_FACTURA As Global.System.Data.DataColumn
        
        Private columnTOTAL_FACTURA As Global.System.Data.DataColumn
        
        Private columncantidad_letra As Global.System.Data.DataColumn
        
        Private columnDETALLE_MONEDA As Global.System.Data.DataColumn
        
        Private columnCODIGO_DETALLE_FACTURA As Global.System.Data.DataColumn
        
        Private columnCONF_VEHICULAR As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnDESTINO As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnPRECIO_UNITARIO As Global.System.Data.DataColumn
        
        Private columnTOTAL_DETALLE As Global.System.Data.DataColumn
        
        Private columnTIPO_SERVICIO As Global.System.Data.DataColumn
        
        Private columnDETALLE_ESTADO As Global.System.Data.DataColumn
        
        Private columnCODIGO_GUIA As Global.System.Data.DataColumn
        
        Private columnDETALLE_GUIA As Global.System.Data.DataColumn
        
        Private columnGUIA_REMITENTE As Global.System.Data.DataColumn
        
        Private columnPLACA_UNIDAD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtFacturaCompleta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RAZON_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RUC_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIRECCION_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TELEFONO_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHA_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property cantidad_letraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad_letra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_DETALLE_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DETALLE_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CONF_VEHICULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONF_VEHICULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRECIO_UNITARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_UNITARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_DETALLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_DETALLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TIPO_SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_SERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_GUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_GUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_GUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_GUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GUIA_REMITENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_REMITENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PLACA_UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACA_UNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtFacturaCompletaRow
            Get
                Return CType(Me.Rows(index),dtFacturaCompletaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaCompletaRowChanging As dtFacturaCompletaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaCompletaRowChanged As dtFacturaCompletaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaCompletaRowDeleting As dtFacturaCompletaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaCompletaRowDeleted As dtFacturaCompletaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtFacturaCompletaRow(ByVal row As dtFacturaCompletaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtFacturaCompletaRow( _
                    ByVal CODIGO_CLIENTE As Integer,  _
                    ByVal RAZON_CLIENTE As String,  _
                    ByVal RUC_CLIENTE As String,  _
                    ByVal DIRECCION_CLIENTE As String,  _
                    ByVal TELEFONO_CLIENTE As String,  _
                    ByVal CODIGO_MONEDA As Integer,  _
                    ByVal FECHA_FACTURA As Date,  _
                    ByVal TOTAL_FACTURA As Decimal,  _
                    ByVal cantidad_letra As String,  _
                    ByVal DETALLE_MONEDA As String,  _
                    ByVal CONF_VEHICULAR As String,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal ORIGEN As String,  _
                    ByVal DESTINO As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal CANTIDAD As Integer,  _
                    ByVal PRECIO_UNITARIO As Decimal,  _
                    ByVal TOTAL_DETALLE As Decimal,  _
                    ByVal TIPO_SERVICIO As Integer,  _
                    ByVal DETALLE_ESTADO As String,  _
                    ByVal CODIGO_GUIA As Integer,  _
                    ByVal DETALLE_GUIA As String,  _
                    ByVal GUIA_REMITENTE As String,  _
                    ByVal PLACA_UNIDAD As String) As dtFacturaCompletaRow
            Dim rowdtFacturaCompletaRow As dtFacturaCompletaRow = CType(Me.NewRow,dtFacturaCompletaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODIGO_CLIENTE, RAZON_CLIENTE, RUC_CLIENTE, DIRECCION_CLIENTE, TELEFONO_CLIENTE, CODIGO_MONEDA, FECHA_FACTURA, TOTAL_FACTURA, cantidad_letra, DETALLE_MONEDA, Nothing, CONF_VEHICULAR, DESCRIPCION, ORIGEN, DESTINO, OBSERVACION, CANTIDAD, PRECIO_UNITARIO, TOTAL_DETALLE, TIPO_SERVICIO, DETALLE_ESTADO, CODIGO_GUIA, DETALLE_GUIA, GUIA_REMITENTE, PLACA_UNIDAD}
            rowdtFacturaCompletaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtFacturaCompletaRow)
            Return rowdtFacturaCompletaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtFacturaCompletaDataTable = CType(MyBase.Clone,dtFacturaCompletaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtFacturaCompletaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_CLIENTE = MyBase.Columns("CODIGO_CLIENTE")
            Me.columnRAZON_CLIENTE = MyBase.Columns("RAZON_CLIENTE")
            Me.columnRUC_CLIENTE = MyBase.Columns("RUC_CLIENTE")
            Me.columnDIRECCION_CLIENTE = MyBase.Columns("DIRECCION_CLIENTE")
            Me.columnTELEFONO_CLIENTE = MyBase.Columns("TELEFONO_CLIENTE")
            Me.columnCODIGO_MONEDA = MyBase.Columns("CODIGO_MONEDA")
            Me.columnFECHA_FACTURA = MyBase.Columns("FECHA_FACTURA")
            Me.columnTOTAL_FACTURA = MyBase.Columns("TOTAL_FACTURA")
            Me.columncantidad_letra = MyBase.Columns("cantidad_letra")
            Me.columnDETALLE_MONEDA = MyBase.Columns("DETALLE_MONEDA")
            Me.columnCODIGO_DETALLE_FACTURA = MyBase.Columns("CODIGO_DETALLE_FACTURA")
            Me.columnCONF_VEHICULAR = MyBase.Columns("CONF_VEHICULAR")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnDESTINO = MyBase.Columns("DESTINO")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnPRECIO_UNITARIO = MyBase.Columns("PRECIO_UNITARIO")
            Me.columnTOTAL_DETALLE = MyBase.Columns("TOTAL_DETALLE")
            Me.columnTIPO_SERVICIO = MyBase.Columns("TIPO_SERVICIO")
            Me.columnDETALLE_ESTADO = MyBase.Columns("DETALLE_ESTADO")
            Me.columnCODIGO_GUIA = MyBase.Columns("CODIGO_GUIA")
            Me.columnDETALLE_GUIA = MyBase.Columns("DETALLE_GUIA")
            Me.columnGUIA_REMITENTE = MyBase.Columns("GUIA_REMITENTE")
            Me.columnPLACA_UNIDAD = MyBase.Columns("PLACA_UNIDAD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_CLIENTE = New Global.System.Data.DataColumn("CODIGO_CLIENTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_CLIENTE)
            Me.columnRAZON_CLIENTE = New Global.System.Data.DataColumn("RAZON_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_CLIENTE)
            Me.columnRUC_CLIENTE = New Global.System.Data.DataColumn("RUC_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CLIENTE)
            Me.columnDIRECCION_CLIENTE = New Global.System.Data.DataColumn("DIRECCION_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_CLIENTE)
            Me.columnTELEFONO_CLIENTE = New Global.System.Data.DataColumn("TELEFONO_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_CLIENTE)
            Me.columnCODIGO_MONEDA = New Global.System.Data.DataColumn("CODIGO_MONEDA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_MONEDA)
            Me.columnFECHA_FACTURA = New Global.System.Data.DataColumn("FECHA_FACTURA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_FACTURA)
            Me.columnTOTAL_FACTURA = New Global.System.Data.DataColumn("TOTAL_FACTURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_FACTURA)
            Me.columncantidad_letra = New Global.System.Data.DataColumn("cantidad_letra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad_letra)
            Me.columnDETALLE_MONEDA = New Global.System.Data.DataColumn("DETALLE_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_MONEDA)
            Me.columnCODIGO_DETALLE_FACTURA = New Global.System.Data.DataColumn("CODIGO_DETALLE_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DETALLE_FACTURA)
            Me.columnCONF_VEHICULAR = New Global.System.Data.DataColumn("CONF_VEHICULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONF_VEHICULAR)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnDESTINO = New Global.System.Data.DataColumn("DESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINO)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnPRECIO_UNITARIO = New Global.System.Data.DataColumn("PRECIO_UNITARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_UNITARIO)
            Me.columnTOTAL_DETALLE = New Global.System.Data.DataColumn("TOTAL_DETALLE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_DETALLE)
            Me.columnTIPO_SERVICIO = New Global.System.Data.DataColumn("TIPO_SERVICIO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_SERVICIO)
            Me.columnDETALLE_ESTADO = New Global.System.Data.DataColumn("DETALLE_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_ESTADO)
            Me.columnCODIGO_GUIA = New Global.System.Data.DataColumn("CODIGO_GUIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_GUIA)
            Me.columnDETALLE_GUIA = New Global.System.Data.DataColumn("DETALLE_GUIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_GUIA)
            Me.columnGUIA_REMITENTE = New Global.System.Data.DataColumn("GUIA_REMITENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_REMITENTE)
            Me.columnPLACA_UNIDAD = New Global.System.Data.DataColumn("PLACA_UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACA_UNIDAD)
            Me.columnCODIGO_FACTURA.AutoIncrement = true
            Me.columnCODIGO_FACTURA.AutoIncrementSeed = -1
            Me.columnCODIGO_FACTURA.AutoIncrementStep = -1
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_FACTURA.ReadOnly = true
            Me.columnRAZON_CLIENTE.MaxLength = 400
            Me.columnRUC_CLIENTE.MaxLength = 11
            Me.columnDIRECCION_CLIENTE.MaxLength = 400
            Me.columnTELEFONO_CLIENTE.MaxLength = 9
            Me.columncantidad_letra.ReadOnly = true
            Me.columncantidad_letra.MaxLength = 250
            Me.columnDETALLE_MONEDA.MaxLength = 18
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrement = true
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrementSeed = -1
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrementStep = -1
            Me.columnCODIGO_DETALLE_FACTURA.ReadOnly = true
            Me.columnCONF_VEHICULAR.MaxLength = 20
            Me.columnDESCRIPCION.MaxLength = 250
            Me.columnORIGEN.MaxLength = 150
            Me.columnDESTINO.MaxLength = 150
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnTOTAL_DETALLE.ReadOnly = true
            Me.columnDETALLE_ESTADO.MaxLength = 50
            Me.columnDETALLE_GUIA.MaxLength = 11
            Me.columnGUIA_REMITENTE.MaxLength = 11
            Me.columnPLACA_UNIDAD.MaxLength = 11
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtFacturaCompletaRow() As dtFacturaCompletaRow
            Return CType(Me.NewRow,dtFacturaCompletaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtFacturaCompletaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtFacturaCompletaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtFacturaCompletaRowChangedEvent) Is Nothing) Then
                RaiseEvent dtFacturaCompletaRowChanged(Me, New dtFacturaCompletaRowChangeEvent(CType(e.Row,dtFacturaCompletaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtFacturaCompletaRowChangingEvent) Is Nothing) Then
                RaiseEvent dtFacturaCompletaRowChanging(Me, New dtFacturaCompletaRowChangeEvent(CType(e.Row,dtFacturaCompletaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtFacturaCompletaRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtFacturaCompletaRowDeleted(Me, New dtFacturaCompletaRowChangeEvent(CType(e.Row,dtFacturaCompletaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtFacturaCompletaRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtFacturaCompletaRowDeleting(Me, New dtFacturaCompletaRowChangeEvent(CType(e.Row,dtFacturaCompletaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtFacturaCompletaRow(ByVal row As dtFacturaCompletaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtFacturaCompletaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRptFacturaRemitenteDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRptFacturaRemitenteRow)
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_DETALLE_FACTURA As Global.System.Data.DataColumn
        
        Private columnGUIA_REMITENTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRptFacturaRemitente"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_DETALLE_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DETALLE_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GUIA_REMITENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIA_REMITENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRptFacturaRemitenteRow
            Get
                Return CType(Me.Rows(index),dtRptFacturaRemitenteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaRemitenteRowChanging As dtRptFacturaRemitenteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaRemitenteRowChanged As dtRptFacturaRemitenteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaRemitenteRowDeleting As dtRptFacturaRemitenteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaRemitenteRowDeleted As dtRptFacturaRemitenteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtRptFacturaRemitenteRow(ByVal row As dtRptFacturaRemitenteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtRptFacturaRemitenteRow(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal GUIA_REMITENTE As String) As dtRptFacturaRemitenteRow
            Dim rowdtRptFacturaRemitenteRow As dtRptFacturaRemitenteRow = CType(Me.NewRow,dtRptFacturaRemitenteRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, GUIA_REMITENTE}
            rowdtRptFacturaRemitenteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRptFacturaRemitenteRow)
            Return rowdtRptFacturaRemitenteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCODIGO_FACTURACODIGO_DETALLE_FACTURAGUIA_REMITENTE(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal GUIA_REMITENTE As String) As dtRptFacturaRemitenteRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, GUIA_REMITENTE}),dtRptFacturaRemitenteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRptFacturaRemitenteDataTable = CType(MyBase.Clone,dtRptFacturaRemitenteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRptFacturaRemitenteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_DETALLE_FACTURA = MyBase.Columns("CODIGO_DETALLE_FACTURA")
            Me.columnGUIA_REMITENTE = MyBase.Columns("GUIA_REMITENTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_DETALLE_FACTURA = New Global.System.Data.DataColumn("CODIGO_DETALLE_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DETALLE_FACTURA)
            Me.columnGUIA_REMITENTE = New Global.System.Data.DataColumn("GUIA_REMITENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIA_REMITENTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_FACTURA, Me.columnCODIGO_DETALLE_FACTURA, Me.columnGUIA_REMITENTE}, true))
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_DETALLE_FACTURA.AllowDBNull = false
            Me.columnGUIA_REMITENTE.AllowDBNull = false
            Me.columnGUIA_REMITENTE.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtRptFacturaRemitenteRow() As dtRptFacturaRemitenteRow
            Return CType(Me.NewRow,dtRptFacturaRemitenteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRptFacturaRemitenteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRptFacturaRemitenteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRptFacturaRemitenteRowChangedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaRemitenteRowChanged(Me, New dtRptFacturaRemitenteRowChangeEvent(CType(e.Row,dtRptFacturaRemitenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRptFacturaRemitenteRowChangingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaRemitenteRowChanging(Me, New dtRptFacturaRemitenteRowChangeEvent(CType(e.Row,dtRptFacturaRemitenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRptFacturaRemitenteRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaRemitenteRowDeleted(Me, New dtRptFacturaRemitenteRowChangeEvent(CType(e.Row,dtRptFacturaRemitenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRptFacturaRemitenteRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaRemitenteRowDeleting(Me, New dtRptFacturaRemitenteRowChangeEvent(CType(e.Row,dtRptFacturaRemitenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtRptFacturaRemitenteRow(ByVal row As dtRptFacturaRemitenteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRptFacturaRemitenteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRptFacturaUnidadDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRptFacturaUnidadRow)
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_DETALLE_FACTURA As Global.System.Data.DataColumn
        
        Private columnPLACA_UNIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO_FACTURA_GUIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRptFacturaUnidad"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_DETALLE_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DETALLE_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PLACA_UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACA_UNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURA_GUIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA_GUIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRptFacturaUnidadRow
            Get
                Return CType(Me.Rows(index),dtRptFacturaUnidadRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaUnidadRowChanging As dtRptFacturaUnidadRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaUnidadRowChanged As dtRptFacturaUnidadRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaUnidadRowDeleting As dtRptFacturaUnidadRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtRptFacturaUnidadRowDeleted As dtRptFacturaUnidadRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtRptFacturaUnidadRow(ByVal row As dtRptFacturaUnidadRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtRptFacturaUnidadRow(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal PLACA_UNIDAD As String) As dtRptFacturaUnidadRow
            Dim rowdtRptFacturaUnidadRow As dtRptFacturaUnidadRow = CType(Me.NewRow,dtRptFacturaUnidadRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, PLACA_UNIDAD, Nothing}
            rowdtRptFacturaUnidadRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRptFacturaUnidadRow)
            Return rowdtRptFacturaUnidadRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByCODIGO_FACTURACODIGO_DETALLE_FACTURACODIGO_FACTURA_GUIA(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal CODIGO_FACTURA_GUIA As Integer) As dtRptFacturaUnidadRow
            Return CType(Me.Rows.Find(New Object() {CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, CODIGO_FACTURA_GUIA}),dtRptFacturaUnidadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRptFacturaUnidadDataTable = CType(MyBase.Clone,dtRptFacturaUnidadDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRptFacturaUnidadDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_DETALLE_FACTURA = MyBase.Columns("CODIGO_DETALLE_FACTURA")
            Me.columnPLACA_UNIDAD = MyBase.Columns("PLACA_UNIDAD")
            Me.columnCODIGO_FACTURA_GUIA = MyBase.Columns("CODIGO_FACTURA_GUIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_DETALLE_FACTURA = New Global.System.Data.DataColumn("CODIGO_DETALLE_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DETALLE_FACTURA)
            Me.columnPLACA_UNIDAD = New Global.System.Data.DataColumn("PLACA_UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACA_UNIDAD)
            Me.columnCODIGO_FACTURA_GUIA = New Global.System.Data.DataColumn("CODIGO_FACTURA_GUIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA_GUIA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO_FACTURA, Me.columnCODIGO_DETALLE_FACTURA, Me.columnCODIGO_FACTURA_GUIA}, true))
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_DETALLE_FACTURA.AllowDBNull = false
            Me.columnPLACA_UNIDAD.AllowDBNull = false
            Me.columnPLACA_UNIDAD.MaxLength = 20
            Me.columnCODIGO_FACTURA_GUIA.AutoIncrement = true
            Me.columnCODIGO_FACTURA_GUIA.AutoIncrementSeed = -1
            Me.columnCODIGO_FACTURA_GUIA.AutoIncrementStep = -1
            Me.columnCODIGO_FACTURA_GUIA.AllowDBNull = false
            Me.columnCODIGO_FACTURA_GUIA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtRptFacturaUnidadRow() As dtRptFacturaUnidadRow
            Return CType(Me.NewRow,dtRptFacturaUnidadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRptFacturaUnidadRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRptFacturaUnidadRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRptFacturaUnidadRowChangedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaUnidadRowChanged(Me, New dtRptFacturaUnidadRowChangeEvent(CType(e.Row,dtRptFacturaUnidadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRptFacturaUnidadRowChangingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaUnidadRowChanging(Me, New dtRptFacturaUnidadRowChangeEvent(CType(e.Row,dtRptFacturaUnidadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRptFacturaUnidadRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaUnidadRowDeleted(Me, New dtRptFacturaUnidadRowChangeEvent(CType(e.Row,dtRptFacturaUnidadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRptFacturaUnidadRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRptFacturaUnidadRowDeleting(Me, New dtRptFacturaUnidadRowChangeEvent(CType(e.Row,dtRptFacturaUnidadRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtRptFacturaUnidadRow(ByVal row As dtRptFacturaUnidadRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRptFacturaUnidadDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtFacturaDetalleDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtFacturaDetalleRow)
        
        Private columnCODIGO_FACTURA As Global.System.Data.DataColumn
        
        Private columnCODIGO_DETALLE_FACTURA As Global.System.Data.DataColumn
        
        Private columnRAZON_CLIENTE As Global.System.Data.DataColumn
        
        Private columnDIRECCION_CLIENTE As Global.System.Data.DataColumn
        
        Private columnRUC_CLIENTE As Global.System.Data.DataColumn
        
        Private columnTELEFONO_CLIENTE As Global.System.Data.DataColumn
        
        Private columnTOTAL_FACTURA As Global.System.Data.DataColumn
        
        Private columnDETALLE_MONEDA As Global.System.Data.DataColumn
        
        Private columnNRO_LETRA As Global.System.Data.DataColumn
        
        Private columnFECHA_FACTURA As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnCONF_VEHICULAR As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnORIGEN As Global.System.Data.DataColumn
        
        Private columnDESTINO As Global.System.Data.DataColumn
        
        Private columnPRECIO_UNITARIO As Global.System.Data.DataColumn
        
        Private columnDETALLE_ESTADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtFacturaDetalle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CODIGO_DETALLE_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_DETALLE_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RAZON_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DIRECCION_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RUC_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TELEFONO_CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO_CLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TOTAL_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NRO_LETRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_LETRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FECHA_FACTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_FACTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CONF_VEHICULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONF_VEHICULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ORIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DESTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PRECIO_UNITARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO_UNITARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DETALLE_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDETALLE_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtFacturaDetalleRow
            Get
                Return CType(Me.Rows(index),dtFacturaDetalleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaDetalleRowChanging As dtFacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaDetalleRowChanged As dtFacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaDetalleRowDeleting As dtFacturaDetalleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event dtFacturaDetalleRowDeleted As dtFacturaDetalleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AdddtFacturaDetalleRow(ByVal row As dtFacturaDetalleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AdddtFacturaDetalleRow( _
                    ByVal RAZON_CLIENTE As String,  _
                    ByVal DIRECCION_CLIENTE As String,  _
                    ByVal RUC_CLIENTE As String,  _
                    ByVal TELEFONO_CLIENTE As String,  _
                    ByVal TOTAL_FACTURA As Decimal,  _
                    ByVal DETALLE_MONEDA As String,  _
                    ByVal NRO_LETRA As String,  _
                    ByVal FECHA_FACTURA As Date,  _
                    ByVal CANTIDAD As Integer,  _
                    ByVal CONF_VEHICULAR As String,  _
                    ByVal DESCRIPCION As String,  _
                    ByVal OBSERVACION As String,  _
                    ByVal ORIGEN As String,  _
                    ByVal DESTINO As String,  _
                    ByVal PRECIO_UNITARIO As Decimal,  _
                    ByVal DETALLE_ESTADO As String) As dtFacturaDetalleRow
            Dim rowdtFacturaDetalleRow As dtFacturaDetalleRow = CType(Me.NewRow,dtFacturaDetalleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, RAZON_CLIENTE, DIRECCION_CLIENTE, RUC_CLIENTE, TELEFONO_CLIENTE, TOTAL_FACTURA, DETALLE_MONEDA, NRO_LETRA, FECHA_FACTURA, CANTIDAD, CONF_VEHICULAR, DESCRIPCION, OBSERVACION, ORIGEN, DESTINO, PRECIO_UNITARIO, DETALLE_ESTADO}
            rowdtFacturaDetalleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtFacturaDetalleRow)
            Return rowdtFacturaDetalleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtFacturaDetalleDataTable = CType(MyBase.Clone,dtFacturaDetalleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtFacturaDetalleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO_FACTURA = MyBase.Columns("CODIGO_FACTURA")
            Me.columnCODIGO_DETALLE_FACTURA = MyBase.Columns("CODIGO_DETALLE_FACTURA")
            Me.columnRAZON_CLIENTE = MyBase.Columns("RAZON_CLIENTE")
            Me.columnDIRECCION_CLIENTE = MyBase.Columns("DIRECCION_CLIENTE")
            Me.columnRUC_CLIENTE = MyBase.Columns("RUC_CLIENTE")
            Me.columnTELEFONO_CLIENTE = MyBase.Columns("TELEFONO_CLIENTE")
            Me.columnTOTAL_FACTURA = MyBase.Columns("TOTAL_FACTURA")
            Me.columnDETALLE_MONEDA = MyBase.Columns("DETALLE_MONEDA")
            Me.columnNRO_LETRA = MyBase.Columns("NRO_LETRA")
            Me.columnFECHA_FACTURA = MyBase.Columns("FECHA_FACTURA")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnCONF_VEHICULAR = MyBase.Columns("CONF_VEHICULAR")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnORIGEN = MyBase.Columns("ORIGEN")
            Me.columnDESTINO = MyBase.Columns("DESTINO")
            Me.columnPRECIO_UNITARIO = MyBase.Columns("PRECIO_UNITARIO")
            Me.columnDETALLE_ESTADO = MyBase.Columns("DETALLE_ESTADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO_FACTURA = New Global.System.Data.DataColumn("CODIGO_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_FACTURA)
            Me.columnCODIGO_DETALLE_FACTURA = New Global.System.Data.DataColumn("CODIGO_DETALLE_FACTURA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_DETALLE_FACTURA)
            Me.columnRAZON_CLIENTE = New Global.System.Data.DataColumn("RAZON_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON_CLIENTE)
            Me.columnDIRECCION_CLIENTE = New Global.System.Data.DataColumn("DIRECCION_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION_CLIENTE)
            Me.columnRUC_CLIENTE = New Global.System.Data.DataColumn("RUC_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC_CLIENTE)
            Me.columnTELEFONO_CLIENTE = New Global.System.Data.DataColumn("TELEFONO_CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO_CLIENTE)
            Me.columnTOTAL_FACTURA = New Global.System.Data.DataColumn("TOTAL_FACTURA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_FACTURA)
            Me.columnDETALLE_MONEDA = New Global.System.Data.DataColumn("DETALLE_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_MONEDA)
            Me.columnNRO_LETRA = New Global.System.Data.DataColumn("NRO_LETRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_LETRA)
            Me.columnFECHA_FACTURA = New Global.System.Data.DataColumn("FECHA_FACTURA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_FACTURA)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnCONF_VEHICULAR = New Global.System.Data.DataColumn("CONF_VEHICULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONF_VEHICULAR)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnORIGEN = New Global.System.Data.DataColumn("ORIGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGEN)
            Me.columnDESTINO = New Global.System.Data.DataColumn("DESTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTINO)
            Me.columnPRECIO_UNITARIO = New Global.System.Data.DataColumn("PRECIO_UNITARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO_UNITARIO)
            Me.columnDETALLE_ESTADO = New Global.System.Data.DataColumn("DETALLE_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDETALLE_ESTADO)
            Me.columnCODIGO_FACTURA.AutoIncrement = true
            Me.columnCODIGO_FACTURA.AutoIncrementSeed = -1
            Me.columnCODIGO_FACTURA.AutoIncrementStep = -1
            Me.columnCODIGO_FACTURA.AllowDBNull = false
            Me.columnCODIGO_FACTURA.ReadOnly = true
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrement = true
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrementSeed = -1
            Me.columnCODIGO_DETALLE_FACTURA.AutoIncrementStep = -1
            Me.columnCODIGO_DETALLE_FACTURA.ReadOnly = true
            Me.columnRAZON_CLIENTE.MaxLength = 400
            Me.columnDIRECCION_CLIENTE.MaxLength = 400
            Me.columnRUC_CLIENTE.MaxLength = 11
            Me.columnTELEFONO_CLIENTE.MaxLength = 9
            Me.columnDETALLE_MONEDA.MaxLength = 18
            Me.columnNRO_LETRA.ReadOnly = true
            Me.columnNRO_LETRA.MaxLength = 180
            Me.columnCONF_VEHICULAR.MaxLength = 20
            Me.columnDESCRIPCION.MaxLength = 250
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnORIGEN.MaxLength = 150
            Me.columnDESTINO.MaxLength = 150
            Me.columnDETALLE_ESTADO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewdtFacturaDetalleRow() As dtFacturaDetalleRow
            Return CType(Me.NewRow,dtFacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtFacturaDetalleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtFacturaDetalleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtFacturaDetalleRowChangedEvent) Is Nothing) Then
                RaiseEvent dtFacturaDetalleRowChanged(Me, New dtFacturaDetalleRowChangeEvent(CType(e.Row,dtFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtFacturaDetalleRowChangingEvent) Is Nothing) Then
                RaiseEvent dtFacturaDetalleRowChanging(Me, New dtFacturaDetalleRowChangeEvent(CType(e.Row,dtFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtFacturaDetalleRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtFacturaDetalleRowDeleted(Me, New dtFacturaDetalleRowChangeEvent(CType(e.Row,dtFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtFacturaDetalleRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtFacturaDetalleRowDeleting(Me, New dtFacturaDetalleRowChangeEvent(CType(e.Row,dtFacturaDetalleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemovedtFacturaDetalleRow(ByVal row As dtFacturaDetalleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As rptLiquidaciones = New rptLiquidaciones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtFacturaDetalleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtLiquidacionEstadoRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtLiquidacionEstado As dtLiquidacionEstadoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtLiquidacionEstado = CType(Me.Table,dtLiquidacionEstadoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_LIQUIDACION() As Integer
            Get
                Return CType(Me(Me.tabledtLiquidacionEstado.CODIGO_LIQUIDACIONColumn),Integer)
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.CODIGO_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NUMERO_LIQUIDACION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.NUMERO_LIQUIDACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NUMERO_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.NUMERO_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Expr1' de la tabla 'dtLiquidacionEstado' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_GUIA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.DETALLE_GUIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_GUIA' de la tabla 'dtLiquidacionEstado' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.DETALLE_GUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PLACA_UNIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.PLACA_UNIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PLACA_UNIDAD' de la tabla 'dtLiquidacionEstado' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.PLACA_UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Expr2() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.Expr2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Expr2' de la tabla 'dtLiquidacionEstado' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.Expr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORIGEN_LIQUIDACION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.ORIGEN_LIQUIDACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORIGEN_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.ORIGEN_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESTINO_LIQUIDACION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.DESTINO_LIQUIDACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESTINO_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.DESTINO_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA_SALIDA() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.FECHA_SALIDAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_SALIDA' de la tabla 'dtLiquidacionEstado' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.FECHA_SALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA_LLEGADA() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.FECHA_LLEGADAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_LLEGADA' de la tabla 'dtLiquidacionEstado' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.FECHA_LLEGADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DINERO_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.DINERO_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DINERO_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.DINERO_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PEAJES_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.PEAJES_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PEAJES_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.PEAJES_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VIATICOS_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.VIATICOS_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VIATICOS_LIQUIDACION' de la tabla 'dtLiquidacionEstado' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.VIATICOS_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GUARDIANIA_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.GUARDIANIA_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GUARDIANIA_LIQUIDACION' de la tabla 'dtLiquidacionEstado'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.GUARDIANIA_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HOSPEDAJE_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.HOSPEDAJE_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HOSPEDAJE_LIQUIDACION' de la tabla 'dtLiquidacionEstado' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.HOSPEDAJE_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BALANZA_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.BALANZA_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'BALANZA_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.BALANZA_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OTROS_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.OTROS_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OTROS_LIQUIDACION' de la tabla 'dtLiquidacionEstado' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.OTROS_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CONSUMO_FISICO_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.CONSUMO_FISICO_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONSUMO_FISICO_LIQUIDACION' de la tabla 'dtLiquidacionEst"& _ 
                            "ado' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.CONSUMO_FISICO_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CONSUMO_VIRTUAL_LIQUIDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.CONSUMO_VIRTUAL_LIQUIDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONSUMO_VIRTUAL_LIQUIDACION' de la tabla 'dtLiquidacionEs"& _ 
                            "tado' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.CONSUMO_VIRTUAL_LIQUIDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLiquidacionEstado.DETALLE_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_ESTADO' de la tabla 'dtLiquidacionEstado' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLiquidacionEstado.DETALLE_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNUMERO_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.NUMERO_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNUMERO_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.NUMERO_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tabledtLiquidacionEstado.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_GUIANull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.DETALLE_GUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_GUIANull()
            Me(Me.tabledtLiquidacionEstado.DETALLE_GUIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPLACA_UNIDADNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.PLACA_UNIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPLACA_UNIDADNull()
            Me(Me.tabledtLiquidacionEstado.PLACA_UNIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsExpr2Null() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.Expr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetExpr2Null()
            Me(Me.tabledtLiquidacionEstado.Expr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORIGEN_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.ORIGEN_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORIGEN_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.ORIGEN_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESTINO_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.DESTINO_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESTINO_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.DESTINO_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHA_SALIDANull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.FECHA_SALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHA_SALIDANull()
            Me(Me.tabledtLiquidacionEstado.FECHA_SALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHA_LLEGADANull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.FECHA_LLEGADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHA_LLEGADANull()
            Me(Me.tabledtLiquidacionEstado.FECHA_LLEGADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDINERO_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.DINERO_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDINERO_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.DINERO_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPEAJES_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.PEAJES_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPEAJES_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.PEAJES_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVIATICOS_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.VIATICOS_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVIATICOS_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.VIATICOS_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGUARDIANIA_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.GUARDIANIA_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGUARDIANIA_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.GUARDIANIA_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHOSPEDAJE_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.HOSPEDAJE_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHOSPEDAJE_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.HOSPEDAJE_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBALANZA_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.BALANZA_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBALANZA_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.BALANZA_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOTROS_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.OTROS_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOTROS_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.OTROS_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCONSUMO_FISICO_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.CONSUMO_FISICO_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCONSUMO_FISICO_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.CONSUMO_FISICO_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCONSUMO_VIRTUAL_LIQUIDACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.CONSUMO_VIRTUAL_LIQUIDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCONSUMO_VIRTUAL_LIQUIDACIONNull()
            Me(Me.tabledtLiquidacionEstado.CONSUMO_VIRTUAL_LIQUIDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_ESTADONull() As Boolean
            Return Me.IsNull(Me.tabledtLiquidacionEstado.DETALLE_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_ESTADONull()
            Me(Me.tabledtLiquidacionEstado.DETALLE_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRptFacturaCabeceraRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRptFacturaCabecera As dtRptFacturaCabeceraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRptFacturaCabecera = CType(Me.Table,dtRptFacturaCabeceraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RAZON_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.RAZON_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RAZON_CLIENTE' de la tabla 'dtRptFacturaCabecera' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.RAZON_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIRECCION_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.DIRECCION_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_CLIENTE' de la tabla 'dtRptFacturaCabecera' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.DIRECCION_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RUC_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.RUC_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC_CLIENTE' de la tabla 'dtRptFacturaCabecera' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.RUC_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA_FACTURA() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.FECHA_FACTURAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_FACTURA' de la tabla 'dtRptFacturaCabecera' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.FECHA_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.DETALLE_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_MONEDA' de la tabla 'dtRptFacturaCabecera' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.DETALLE_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_FACTURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.TOTAL_FACTURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_FACTURA' de la tabla 'dtRptFacturaCabecera' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.TOTAL_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_FACTURA_LETRA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.TOTAL_FACTURA_LETRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_FACTURA_LETRA' de la tabla 'dtRptFacturaCabecera' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.TOTAL_FACTURA_LETRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SUBTOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.SUBTOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SUBTOTAL' de la tabla 'dtRptFacturaCabecera' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.SUBTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IGV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.IGVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IGV' de la tabla 'dtRptFacturaCabecera' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.IGVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaCabecera.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_MONEDA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaCabecera.CODIGO_MONEDAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_MONEDA' de la tabla 'dtRptFacturaCabecera' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaCabecera.CODIGO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRAZON_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.RAZON_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRAZON_CLIENTENull()
            Me(Me.tabledtRptFacturaCabecera.RAZON_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIRECCION_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.DIRECCION_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIRECCION_CLIENTENull()
            Me(Me.tabledtRptFacturaCabecera.DIRECCION_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRUC_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.RUC_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRUC_CLIENTENull()
            Me(Me.tabledtRptFacturaCabecera.RUC_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHA_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.FECHA_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHA_FACTURANull()
            Me(Me.tabledtRptFacturaCabecera.FECHA_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_MONEDANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.DETALLE_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_MONEDANull()
            Me(Me.tabledtRptFacturaCabecera.DETALLE_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.TOTAL_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_FACTURANull()
            Me(Me.tabledtRptFacturaCabecera.TOTAL_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_FACTURA_LETRANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.TOTAL_FACTURA_LETRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_FACTURA_LETRANull()
            Me(Me.tabledtRptFacturaCabecera.TOTAL_FACTURA_LETRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSUBTOTALNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.SUBTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSUBTOTALNull()
            Me(Me.tabledtRptFacturaCabecera.SUBTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIGVNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.IGVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIGVNull()
            Me(Me.tabledtRptFacturaCabecera.IGVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_MONEDANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaCabecera.CODIGO_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_MONEDANull()
            Me(Me.tabledtRptFacturaCabecera.CODIGO_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRptFacturaDetalleRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRptFacturaDetalle As dtRptFacturaDetalleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRptFacturaDetalle = CType(Me.Table,dtRptFacturaDetalleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CANTIDAD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.CANTIDADColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD' de la tabla 'dtRptFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CONF_VEHICULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.CONF_VEHICULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONF_VEHICULAR' de la tabla 'dtRptFacturaDetalle' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.CONF_VEHICULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACION' de la tabla 'dtRptFacturaDetalle' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRECIO_UNITARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.PRECIO_UNITARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRECIO_UNITARIO' de la tabla 'dtRptFacturaDetalle' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.PRECIO_UNITARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORIGEN' de la tabla 'dtRptFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESTINO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.DESTINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESTINO' de la tabla 'dtRptFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.DESTINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaDetalle.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_DETALLE_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaDetalle.CODIGO_DETALLE_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.CODIGO_DETALLE_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.DETALLE_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_ESTADO' de la tabla 'dtRptFacturaDetalle' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.DETALLE_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RAZON_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.RAZON_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RAZON_CLIENTE' de la tabla 'dtRptFacturaDetalle' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.RAZON_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIRECCION_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.DIRECCION_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_CLIENTE' de la tabla 'dtRptFacturaDetalle' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.DIRECCION_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RUC_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.RUC_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC_CLIENTE' de la tabla 'dtRptFacturaDetalle' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.RUC_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TELEFONO_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.TELEFONO_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_CLIENTE' de la tabla 'dtRptFacturaDetalle' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.TELEFONO_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_FACTURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.TOTAL_FACTURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_FACTURA' de la tabla 'dtRptFacturaDetalle' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.TOTAL_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.DETALLE_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_MONEDA' de la tabla 'dtRptFacturaDetalle' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.DETALLE_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NRO_LETRA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.NRO_LETRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_LETRA' de la tabla 'dtRptFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.NRO_LETRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA_FACTURA() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.FECHA_FACTURAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_FACTURA' de la tabla 'dtRptFacturaDetalle' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.FECHA_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'dtRptFacturaDetalle' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VALOR_REFERENCIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.VALOR_REFERENCIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VALOR_REFERENCIAL' de la tabla 'dtRptFacturaDetalle' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.VALOR_REFERENCIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TIPO_SERVICIO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaDetalle.TIPO_SERVICIOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_SERVICIO' de la tabla 'dtRptFacturaDetalle' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaDetalle.TIPO_SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tabledtRptFacturaDetalle.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCONF_VEHICULARNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.CONF_VEHICULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCONF_VEHICULARNull()
            Me(Me.tabledtRptFacturaDetalle.CONF_VEHICULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tabledtRptFacturaDetalle.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRECIO_UNITARIONull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.PRECIO_UNITARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRECIO_UNITARIONull()
            Me(Me.tabledtRptFacturaDetalle.PRECIO_UNITARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORIGENNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORIGENNull()
            Me(Me.tabledtRptFacturaDetalle.ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESTINONull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.DESTINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESTINONull()
            Me(Me.tabledtRptFacturaDetalle.DESTINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_ESTADONull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.DETALLE_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_ESTADONull()
            Me(Me.tabledtRptFacturaDetalle.DETALLE_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRAZON_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.RAZON_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRAZON_CLIENTENull()
            Me(Me.tabledtRptFacturaDetalle.RAZON_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIRECCION_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.DIRECCION_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIRECCION_CLIENTENull()
            Me(Me.tabledtRptFacturaDetalle.DIRECCION_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRUC_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.RUC_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRUC_CLIENTENull()
            Me(Me.tabledtRptFacturaDetalle.RUC_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTELEFONO_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.TELEFONO_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTELEFONO_CLIENTENull()
            Me(Me.tabledtRptFacturaDetalle.TELEFONO_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.TOTAL_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_FACTURANull()
            Me(Me.tabledtRptFacturaDetalle.TOTAL_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_MONEDANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.DETALLE_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_MONEDANull()
            Me(Me.tabledtRptFacturaDetalle.DETALLE_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNRO_LETRANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.NRO_LETRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNRO_LETRANull()
            Me(Me.tabledtRptFacturaDetalle.NRO_LETRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHA_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.FECHA_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHA_FACTURANull()
            Me(Me.tabledtRptFacturaDetalle.FECHA_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tabledtRptFacturaDetalle.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVALOR_REFERENCIALNull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.VALOR_REFERENCIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVALOR_REFERENCIALNull()
            Me(Me.tabledtRptFacturaDetalle.VALOR_REFERENCIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTIPO_SERVICIONull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaDetalle.TIPO_SERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTIPO_SERVICIONull()
            Me(Me.tabledtRptFacturaDetalle.TIPO_SERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRptFacturaGuiaRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRptFacturaGuia As dtRptFacturaGuiaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRptFacturaGuia = CType(Me.Table,dtRptFacturaGuiaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaGuia.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaGuia.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_DETALLE_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaGuia.CODIGO_DETALLE_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaGuia.CODIGO_DETALLE_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_GUIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaGuia.CODIGO_GUIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_GUIA' de la tabla 'dtRptFacturaGuia' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaGuia.CODIGO_GUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_GUIA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRptFacturaGuia.DETALLE_GUIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_GUIA' de la tabla 'dtRptFacturaGuia' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRptFacturaGuia.DETALLE_GUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_GUIANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaGuia.CODIGO_GUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_GUIANull()
            Me(Me.tabledtRptFacturaGuia.CODIGO_GUIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_GUIANull() As Boolean
            Return Me.IsNull(Me.tabledtRptFacturaGuia.DETALLE_GUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_GUIANull()
            Me(Me.tabledtRptFacturaGuia.DETALLE_GUIAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtFacturaCompletaRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtFacturaCompleta As dtFacturaCompletaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtFacturaCompleta = CType(Me.Table,dtFacturaCompletaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtFacturaCompleta.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_CLIENTE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.CODIGO_CLIENTEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_CLIENTE' de la tabla 'dtFacturaCompleta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CODIGO_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RAZON_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.RAZON_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RAZON_CLIENTE' de la tabla 'dtFacturaCompleta' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.RAZON_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RUC_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.RUC_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC_CLIENTE' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.RUC_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIRECCION_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.DIRECCION_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_CLIENTE' de la tabla 'dtFacturaCompleta' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.DIRECCION_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TELEFONO_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.TELEFONO_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_CLIENTE' de la tabla 'dtFacturaCompleta' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.TELEFONO_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_MONEDA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.CODIGO_MONEDAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_MONEDA' de la tabla 'dtFacturaCompleta' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CODIGO_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA_FACTURA() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.FECHA_FACTURAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_FACTURA' de la tabla 'dtFacturaCompleta' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.FECHA_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_FACTURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.TOTAL_FACTURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_FACTURA' de la tabla 'dtFacturaCompleta' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.TOTAL_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property cantidad_letra() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.cantidad_letraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cantidad_letra' de la tabla 'dtFacturaCompleta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.cantidad_letraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.DETALLE_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_MONEDA' de la tabla 'dtFacturaCompleta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.DETALLE_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_DETALLE_FACTURA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.CODIGO_DETALLE_FACTURAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_DETALLE_FACTURA' de la tabla 'dtFacturaCompleta' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CODIGO_DETALLE_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CONF_VEHICULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.CONF_VEHICULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONF_VEHICULAR' de la tabla 'dtFacturaCompleta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CONF_VEHICULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORIGEN' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESTINO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.DESTINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESTINO' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.DESTINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACION' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CANTIDAD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.CANTIDADColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRECIO_UNITARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.PRECIO_UNITARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRECIO_UNITARIO' de la tabla 'dtFacturaCompleta' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.PRECIO_UNITARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_DETALLE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.TOTAL_DETALLEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_DETALLE' de la tabla 'dtFacturaCompleta' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.TOTAL_DETALLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TIPO_SERVICIO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.TIPO_SERVICIOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_SERVICIO' de la tabla 'dtFacturaCompleta' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.TIPO_SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.DETALLE_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_ESTADO' de la tabla 'dtFacturaCompleta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.DETALLE_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_GUIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.CODIGO_GUIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_GUIA' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.CODIGO_GUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_GUIA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.DETALLE_GUIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_GUIA' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.DETALLE_GUIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GUIA_REMITENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.GUIA_REMITENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GUIA_REMITENTE' de la tabla 'dtFacturaCompleta' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.GUIA_REMITENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PLACA_UNIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaCompleta.PLACA_UNIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PLACA_UNIDAD' de la tabla 'dtFacturaCompleta' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaCompleta.PLACA_UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.CODIGO_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_CLIENTENull()
            Me(Me.tabledtFacturaCompleta.CODIGO_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRAZON_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.RAZON_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRAZON_CLIENTENull()
            Me(Me.tabledtFacturaCompleta.RAZON_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRUC_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.RUC_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRUC_CLIENTENull()
            Me(Me.tabledtFacturaCompleta.RUC_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIRECCION_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.DIRECCION_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIRECCION_CLIENTENull()
            Me(Me.tabledtFacturaCompleta.DIRECCION_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTELEFONO_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.TELEFONO_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTELEFONO_CLIENTENull()
            Me(Me.tabledtFacturaCompleta.TELEFONO_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_MONEDANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.CODIGO_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_MONEDANull()
            Me(Me.tabledtFacturaCompleta.CODIGO_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHA_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.FECHA_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHA_FACTURANull()
            Me(Me.tabledtFacturaCompleta.FECHA_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.TOTAL_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_FACTURANull()
            Me(Me.tabledtFacturaCompleta.TOTAL_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Iscantidad_letraNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.cantidad_letraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Setcantidad_letraNull()
            Me(Me.tabledtFacturaCompleta.cantidad_letraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_MONEDANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.DETALLE_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_MONEDANull()
            Me(Me.tabledtFacturaCompleta.DETALLE_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_DETALLE_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.CODIGO_DETALLE_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_DETALLE_FACTURANull()
            Me(Me.tabledtFacturaCompleta.CODIGO_DETALLE_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCONF_VEHICULARNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.CONF_VEHICULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCONF_VEHICULARNull()
            Me(Me.tabledtFacturaCompleta.CONF_VEHICULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tabledtFacturaCompleta.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORIGENNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORIGENNull()
            Me(Me.tabledtFacturaCompleta.ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESTINONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.DESTINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESTINONull()
            Me(Me.tabledtFacturaCompleta.DESTINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tabledtFacturaCompleta.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tabledtFacturaCompleta.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRECIO_UNITARIONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.PRECIO_UNITARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRECIO_UNITARIONull()
            Me(Me.tabledtFacturaCompleta.PRECIO_UNITARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_DETALLENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.TOTAL_DETALLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_DETALLENull()
            Me(Me.tabledtFacturaCompleta.TOTAL_DETALLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTIPO_SERVICIONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.TIPO_SERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTIPO_SERVICIONull()
            Me(Me.tabledtFacturaCompleta.TIPO_SERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_ESTADONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.DETALLE_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_ESTADONull()
            Me(Me.tabledtFacturaCompleta.DETALLE_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_GUIANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.CODIGO_GUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_GUIANull()
            Me(Me.tabledtFacturaCompleta.CODIGO_GUIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_GUIANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.DETALLE_GUIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_GUIANull()
            Me(Me.tabledtFacturaCompleta.DETALLE_GUIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGUIA_REMITENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.GUIA_REMITENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGUIA_REMITENTENull()
            Me(Me.tabledtFacturaCompleta.GUIA_REMITENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPLACA_UNIDADNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaCompleta.PLACA_UNIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPLACA_UNIDADNull()
            Me(Me.tabledtFacturaCompleta.PLACA_UNIDADColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRptFacturaRemitenteRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRptFacturaRemitente As dtRptFacturaRemitenteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRptFacturaRemitente = CType(Me.Table,dtRptFacturaRemitenteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaRemitente.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaRemitente.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_DETALLE_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaRemitente.CODIGO_DETALLE_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaRemitente.CODIGO_DETALLE_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GUIA_REMITENTE() As String
            Get
                Return CType(Me(Me.tabledtRptFacturaRemitente.GUIA_REMITENTEColumn),String)
            End Get
            Set
                Me(Me.tabledtRptFacturaRemitente.GUIA_REMITENTEColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRptFacturaUnidadRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRptFacturaUnidad As dtRptFacturaUnidadDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRptFacturaUnidad = CType(Me.Table,dtRptFacturaUnidadDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaUnidad.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaUnidad.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_DETALLE_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaUnidad.CODIGO_DETALLE_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaUnidad.CODIGO_DETALLE_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PLACA_UNIDAD() As String
            Get
                Return CType(Me(Me.tabledtRptFacturaUnidad.PLACA_UNIDADColumn),String)
            End Get
            Set
                Me(Me.tabledtRptFacturaUnidad.PLACA_UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA_GUIA() As Integer
            Get
                Return CType(Me(Me.tabledtRptFacturaUnidad.CODIGO_FACTURA_GUIAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtRptFacturaUnidad.CODIGO_FACTURA_GUIAColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtFacturaDetalleRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtFacturaDetalle As dtFacturaDetalleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtFacturaDetalle = CType(Me.Table,dtFacturaDetalleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_FACTURA() As Integer
            Get
                Return CType(Me(Me.tabledtFacturaDetalle.CODIGO_FACTURAColumn),Integer)
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.CODIGO_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CODIGO_DETALLE_FACTURA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.CODIGO_DETALLE_FACTURAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO_DETALLE_FACTURA' de la tabla 'dtFacturaDetalle' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.CODIGO_DETALLE_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RAZON_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.RAZON_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RAZON_CLIENTE' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.RAZON_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DIRECCION_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.DIRECCION_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIRECCION_CLIENTE' de la tabla 'dtFacturaDetalle' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.DIRECCION_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RUC_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.RUC_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RUC_CLIENTE' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.RUC_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TELEFONO_CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.TELEFONO_CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TELEFONO_CLIENTE' de la tabla 'dtFacturaDetalle' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.TELEFONO_CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TOTAL_FACTURA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.TOTAL_FACTURAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL_FACTURA' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.TOTAL_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.DETALLE_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_MONEDA' de la tabla 'dtFacturaDetalle' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.DETALLE_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NRO_LETRA() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.NRO_LETRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_LETRA' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.NRO_LETRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FECHA_FACTURA() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.FECHA_FACTURAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_FACTURA' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.FECHA_FACTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CANTIDAD() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.CANTIDADColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CONF_VEHICULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.CONF_VEHICULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CONF_VEHICULAR' de la tabla 'dtFacturaDetalle' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.CONF_VEHICULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACION' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ORIGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.ORIGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORIGEN' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.ORIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DESTINO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.DESTINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESTINO' de la tabla 'dtFacturaDetalle' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.DESTINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PRECIO_UNITARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.PRECIO_UNITARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRECIO_UNITARIO' de la tabla 'dtFacturaDetalle' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.PRECIO_UNITARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DETALLE_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFacturaDetalle.DETALLE_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DETALLE_ESTADO' de la tabla 'dtFacturaDetalle' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFacturaDetalle.DETALLE_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCODIGO_DETALLE_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.CODIGO_DETALLE_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCODIGO_DETALLE_FACTURANull()
            Me(Me.tabledtFacturaDetalle.CODIGO_DETALLE_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRAZON_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.RAZON_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRAZON_CLIENTENull()
            Me(Me.tabledtFacturaDetalle.RAZON_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDIRECCION_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.DIRECCION_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDIRECCION_CLIENTENull()
            Me(Me.tabledtFacturaDetalle.DIRECCION_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRUC_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.RUC_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRUC_CLIENTENull()
            Me(Me.tabledtFacturaDetalle.RUC_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTELEFONO_CLIENTENull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.TELEFONO_CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTELEFONO_CLIENTENull()
            Me(Me.tabledtFacturaDetalle.TELEFONO_CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTOTAL_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.TOTAL_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTOTAL_FACTURANull()
            Me(Me.tabledtFacturaDetalle.TOTAL_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_MONEDANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.DETALLE_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_MONEDANull()
            Me(Me.tabledtFacturaDetalle.DETALLE_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNRO_LETRANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.NRO_LETRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNRO_LETRANull()
            Me(Me.tabledtFacturaDetalle.NRO_LETRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFECHA_FACTURANull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.FECHA_FACTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFECHA_FACTURANull()
            Me(Me.tabledtFacturaDetalle.FECHA_FACTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tabledtFacturaDetalle.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCONF_VEHICULARNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.CONF_VEHICULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCONF_VEHICULARNull()
            Me(Me.tabledtFacturaDetalle.CONF_VEHICULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tabledtFacturaDetalle.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tabledtFacturaDetalle.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsORIGENNull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.ORIGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetORIGENNull()
            Me(Me.tabledtFacturaDetalle.ORIGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDESTINONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.DESTINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDESTINONull()
            Me(Me.tabledtFacturaDetalle.DESTINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPRECIO_UNITARIONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.PRECIO_UNITARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPRECIO_UNITARIONull()
            Me(Me.tabledtFacturaDetalle.PRECIO_UNITARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDETALLE_ESTADONull() As Boolean
            Return Me.IsNull(Me.tabledtFacturaDetalle.DETALLE_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDETALLE_ESTADONull()
            Me(Me.tabledtFacturaDetalle.DETALLE_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtLiquidacionEstadoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtLiquidacionEstadoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtLiquidacionEstadoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtLiquidacionEstadoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtRptFacturaCabeceraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRptFacturaCabeceraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtRptFacturaCabeceraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtRptFacturaCabeceraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtRptFacturaDetalleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRptFacturaDetalleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtRptFacturaDetalleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtRptFacturaDetalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtRptFacturaGuiaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRptFacturaGuiaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtRptFacturaGuiaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtRptFacturaGuiaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtFacturaCompletaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtFacturaCompletaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtFacturaCompletaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtFacturaCompletaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtRptFacturaRemitenteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRptFacturaRemitenteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtRptFacturaRemitenteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtRptFacturaRemitenteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtRptFacturaUnidadRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRptFacturaUnidadRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtRptFacturaUnidadRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtRptFacturaUnidadRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class dtFacturaDetalleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtFacturaDetalleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As dtFacturaDetalleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As dtFacturaDetalleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace rptLiquidacionesTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtLiquidacionEstadoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtLiquidacionEstado"
            tableMapping.ColumnMappings.Add("CODIGO_LIQUIDACION", "CODIGO_LIQUIDACION")
            tableMapping.ColumnMappings.Add("NUMERO_LIQUIDACION", "NUMERO_LIQUIDACION")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("DETALLE_GUIA", "DETALLE_GUIA")
            tableMapping.ColumnMappings.Add("PLACA_UNIDAD", "PLACA_UNIDAD")
            tableMapping.ColumnMappings.Add("Expr2", "Expr2")
            tableMapping.ColumnMappings.Add("ORIGEN_LIQUIDACION", "ORIGEN_LIQUIDACION")
            tableMapping.ColumnMappings.Add("DESTINO_LIQUIDACION", "DESTINO_LIQUIDACION")
            tableMapping.ColumnMappings.Add("FECHA_SALIDA", "FECHA_SALIDA")
            tableMapping.ColumnMappings.Add("FECHA_LLEGADA", "FECHA_LLEGADA")
            tableMapping.ColumnMappings.Add("DINERO_LIQUIDACION", "DINERO_LIQUIDACION")
            tableMapping.ColumnMappings.Add("PEAJES_LIQUIDACION", "PEAJES_LIQUIDACION")
            tableMapping.ColumnMappings.Add("VIATICOS_LIQUIDACION", "VIATICOS_LIQUIDACION")
            tableMapping.ColumnMappings.Add("GUARDIANIA_LIQUIDACION", "GUARDIANIA_LIQUIDACION")
            tableMapping.ColumnMappings.Add("HOSPEDAJE_LIQUIDACION", "HOSPEDAJE_LIQUIDACION")
            tableMapping.ColumnMappings.Add("BALANZA_LIQUIDACION", "BALANZA_LIQUIDACION")
            tableMapping.ColumnMappings.Add("OTROS_LIQUIDACION", "OTROS_LIQUIDACION")
            tableMapping.ColumnMappings.Add("CONSUMO_FISICO_LIQUIDACION", "CONSUMO_FISICO_LIQUIDACION")
            tableMapping.ColumnMappings.Add("CONSUMO_VIRTUAL_LIQUIDACION", "CONSUMO_VIRTUAL_LIQUIDACION")
            tableMapping.ColumnMappings.Add("DETALLE_ESTADO", "DETALLE_ESTADO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        a.CODIGO_LIQUIDACION, a.NUMERO_LIQUIDACION, f.APELLIDO_PATERNO_TRAB"& _ 
                "AJADOR + ' ' + f.APELLIDO_MATERNO_TRABAJADOR + ', ' + f.NOMBRES_TRABAJADOR AS Ex"& _ 
                "pr1, d.DETALLE_GUIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         b.PLACA_UNIDAD, c.PLACA_UNIDAD A"& _ 
                "S Expr2, a.ORIGEN_LIQUIDACION, a.DESTINO_LIQUIDACION, a.FECHA_SALIDA, a.FECHA_LL"& _ 
                "EGADA, a.DINERO_LIQUIDACION, a.PEAJES_LIQUIDACION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         a."& _ 
                "VIATICOS_LIQUIDACION, a.GUARDIANIA_LIQUIDACION, a.HOSPEDAJE_LIQUIDACION, a.BALAN"& _ 
                "ZA_LIQUIDACION, a.OTROS_LIQUIDACION, a.CONSUMO_FISICO_LIQUIDACION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              a.CONSUMO_VIRTUAL_LIQUIDACION, e.DETALLE_ESTADO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            d"& _ 
                "bo.LIQUIDACION AS a LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.UNIDAD AS b ON"& _ 
                " a.CODIGO_UNIDAD_TRACTO = b.CODIGO_UNIDAD LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    dbo.UNIDAD AS c ON a.CODIGO_UNIDAD_SEMITRAILER = c.CODIGO_UNIDAD LEFT OUTER "& _ 
                "JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.GUIA_TRANSPORTISTA AS d ON d.CODIGO_GUIA = a."& _ 
                "CODIGO_GUIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.ESTADO AS e ON e.CODIG"& _ 
                "O_ESTADO = a.CODIGO_ESTADO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.TRABAJA"& _ 
                "DOR AS f ON f.CODIGO_TRABAJADOR = a.CODIGO_TRABAJADOR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (a.CODIGO_ES"& _ 
                "TADO like '%'+cast(@estado as varchar(2))+'%')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY a.CODIGO_LIQUIDACION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@estado", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtLiquidacionEstadoDataTable, ByVal estado As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (estado.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(estado.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal estado As Global.System.Nullable(Of Integer)) As rptLiquidaciones.dtLiquidacionEstadoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (estado.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(estado.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As rptLiquidaciones.dtLiquidacionEstadoDataTable = New rptLiquidaciones.dtLiquidacionEstadoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRptFacturaCabeceraTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRptFacturaCabecera"
            tableMapping.ColumnMappings.Add("RAZON_CLIENTE", "RAZON_CLIENTE")
            tableMapping.ColumnMappings.Add("DIRECCION_CLIENTE", "DIRECCION_CLIENTE")
            tableMapping.ColumnMappings.Add("RUC_CLIENTE", "RUC_CLIENTE")
            tableMapping.ColumnMappings.Add("FECHA_FACTURA", "FECHA_FACTURA")
            tableMapping.ColumnMappings.Add("DETALLE_MONEDA", "DETALLE_MONEDA")
            tableMapping.ColumnMappings.Add("TOTAL_FACTURA", "TOTAL_FACTURA")
            tableMapping.ColumnMappings.Add("TOTAL_FACTURA_LETRA", "TOTAL_FACTURA_LETRA")
            tableMapping.ColumnMappings.Add("SUBTOTAL", "SUBTOTAL")
            tableMapping.ColumnMappings.Add("IGV", "IGV")
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_MONEDA", "CODIGO_MONEDA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"                  a.CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                     "& _ 
                "b.RAZON_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DIRECCION_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.RUC_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.FECHA_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.TOTAL_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.TOTAL_FACTURA*0.18 SUBTOTAL,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.TOTAL_FACTURA*0.82 IGV"& _ 
                ","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"dbo.ufnConvertirNumeroLetra(a.TOTAL_FACTURA)TOTAL_FACTURA_LETRA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.DETAL"& _ 
                "LE_MONEDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.CODIGO_MONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"FACTURA a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join CLIENTE b on a.CODIGO_CLI"& _ 
                "ENTE=b.CODIGO_CLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join MONEDA c on a.CODIGO_MONEDA=c.CODIGO_MONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"wh"& _ 
                "ere"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA=@codigo_factura"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtRptFacturaCabeceraDataTable, ByVal codigo_factura As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer) As rptLiquidaciones.dtRptFacturaCabeceraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Dim dataTable As rptLiquidaciones.dtRptFacturaCabeceraDataTable = New rptLiquidaciones.dtRptFacturaCabeceraDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRptFacturaDetalleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRptFacturaDetalle"
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("CONF_VEHICULAR", "CONF_VEHICULAR")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("PRECIO_UNITARIO", "PRECIO_UNITARIO")
            tableMapping.ColumnMappings.Add("ORIGEN", "ORIGEN")
            tableMapping.ColumnMappings.Add("DESTINO", "DESTINO")
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_DETALLE_FACTURA", "CODIGO_DETALLE_FACTURA")
            tableMapping.ColumnMappings.Add("DETALLE_ESTADO", "DETALLE_ESTADO")
            tableMapping.ColumnMappings.Add("RAZON_CLIENTE", "RAZON_CLIENTE")
            tableMapping.ColumnMappings.Add("DIRECCION_CLIENTE", "DIRECCION_CLIENTE")
            tableMapping.ColumnMappings.Add("RUC_CLIENTE", "RUC_CLIENTE")
            tableMapping.ColumnMappings.Add("TELEFONO_CLIENTE", "TELEFONO_CLIENTE")
            tableMapping.ColumnMappings.Add("TOTAL_FACTURA", "TOTAL_FACTURA")
            tableMapping.ColumnMappings.Add("DETALLE_MONEDA", "DETALLE_MONEDA")
            tableMapping.ColumnMappings.Add("Column1", "NRO_LETRA")
            tableMapping.ColumnMappings.Add("FECHA_FACTURA", "FECHA_FACTURA")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("VALOR_REFERENCIAL", "VALOR_REFERENCIAL")
            tableMapping.ColumnMappings.Add("TIPO_SERVICIO", "TIPO_SERVICIO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CODIGO_DETALLE_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.RAZON_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.DI"& _ 
                "RECCION_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.RUC_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.TELEFONO_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.TOTAL_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&"d.DETALLE_MONEDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"dbo.ufnConvertirNumeroLetra(a.TOTAL_FACTURA),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.FECHA_F"& _ 
                "ACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CANTIDAD,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CONF_VEHICULAR,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"coalesce(b.DESCRIPCION,'')DESCRIP"& _ 
                "CION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.OBSERVACION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.ORIGEN,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DESTINO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.PRECIO_UNITARIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"e.DETA"& _ 
                "LLE_ESTADO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"b.VALOR_REFERENCIAL,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"b.TIPO_SERVICIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"FACTURA a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join DE"& _ 
                "TALLE_FACTURA b on a.CODIGO_FACTURA=b.CODIGO_FACTURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join CLIENTE c on c.C"& _ 
                "ODIGO_CLIENTE=a.CODIGO_CLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join MONEDA d on d.CODIGO_MONEDA=a.CODIGO_M"& _ 
                "ONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join ESTADO e on e.CODIGO_ESTADO=b.TIPO_SERVICIO and e.TIPO_ESTADO=6"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA=@codigo_factura"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtRptFacturaDetalleDataTable, ByVal codigo_factura As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer) As rptLiquidaciones.dtRptFacturaDetalleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Dim dataTable As rptLiquidaciones.dtRptFacturaDetalleDataTable = New rptLiquidaciones.dtRptFacturaDetalleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRptFacturaGuiaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRptFacturaGuia"
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_DETALLE_FACTURA", "CODIGO_DETALLE_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_GUIA", "CODIGO_GUIA")
            tableMapping.ColumnMappings.Add("DETALLE_GUIA", "DETALLE_GUIA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_DETALLE_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CODIGO_GUIA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DETA"& _ 
                "LLE_GUIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"DETALLE_FACTURA_GUIA a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join GUIA_TRANSPORTISTA b on a.CODIG"& _ 
                "O_GUIA=b.CODIGO_GUIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_FACTURA=@codigo_factura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"and CODIGO_DETALLE"& _ 
                "_FACTURA=@codigo_detalle"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_detalle", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtRptFacturaGuiaDataTable, ByVal codigo_factura As Integer, ByVal codigo_detalle As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codigo_detalle,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer, ByVal codigo_detalle As Integer) As rptLiquidaciones.dtRptFacturaGuiaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codigo_detalle,Integer)
            Dim dataTable As rptLiquidaciones.dtRptFacturaGuiaDataTable = New rptLiquidaciones.dtRptFacturaGuiaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtFacturaCompletaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtFacturaCompleta"
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_CLIENTE", "CODIGO_CLIENTE")
            tableMapping.ColumnMappings.Add("RAZON_CLIENTE", "RAZON_CLIENTE")
            tableMapping.ColumnMappings.Add("RUC_CLIENTE", "RUC_CLIENTE")
            tableMapping.ColumnMappings.Add("DIRECCION_CLIENTE", "DIRECCION_CLIENTE")
            tableMapping.ColumnMappings.Add("TELEFONO_CLIENTE", "TELEFONO_CLIENTE")
            tableMapping.ColumnMappings.Add("CODIGO_MONEDA", "CODIGO_MONEDA")
            tableMapping.ColumnMappings.Add("FECHA_FACTURA", "FECHA_FACTURA")
            tableMapping.ColumnMappings.Add("TOTAL_FACTURA", "TOTAL_FACTURA")
            tableMapping.ColumnMappings.Add("cantidad_letra", "cantidad_letra")
            tableMapping.ColumnMappings.Add("DETALLE_MONEDA", "DETALLE_MONEDA")
            tableMapping.ColumnMappings.Add("CODIGO_DETALLE_FACTURA", "CODIGO_DETALLE_FACTURA")
            tableMapping.ColumnMappings.Add("CONF_VEHICULAR", "CONF_VEHICULAR")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("ORIGEN", "ORIGEN")
            tableMapping.ColumnMappings.Add("DESTINO", "DESTINO")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("PRECIO_UNITARIO", "PRECIO_UNITARIO")
            tableMapping.ColumnMappings.Add("TOTAL_DETALLE", "TOTAL_DETALLE")
            tableMapping.ColumnMappings.Add("TIPO_SERVICIO", "TIPO_SERVICIO")
            tableMapping.ColumnMappings.Add("DETALLE_ESTADO", "DETALLE_ESTADO")
            tableMapping.ColumnMappings.Add("CODIGO_GUIA", "CODIGO_GUIA")
            tableMapping.ColumnMappings.Add("DETALLE_GUIA", "DETALLE_GUIA")
            tableMapping.ColumnMappings.Add("GUIA_REMITENTE", "GUIA_REMITENTE")
            tableMapping.ColumnMappings.Add("PLACA_UNIDAD", "PLACA_UNIDAD")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"g.RAZON_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"g.RUC_CLIENT"& _ 
                "E,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"g.DIRECCION_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"g.TELEFONO_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_MONEDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.FECHA"& _ 
                "_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.TOTAL_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"dbo.ufnCantidadConLetra(1233) as cantidad_letra"& _ 
                ","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"h.DETALLE_MONEDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CODIGO_DETALLE_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CONF_VEHICULAR,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DE"& _ 
                "SCRIPCION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.ORIGEN,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DESTINO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.OBSERVACION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CANTIDAD,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.PREC"& _ 
                "IO_UNITARIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CANTIDAD * b.PRECIO_UNITARIO AS TOTAL_DETALLE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.TIPO_SERVI"& _ 
                "CIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"i.DETALLE_ESTADO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.CODIGO_GUIA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"f.DETALLE_GUIA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"d.GUIA_REMITEN"& _ 
                "TE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"e.PLACA_UNIDAD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"FACTURA a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join DETALLE_FACTURA b on a.CODIGO_F"& _ 
                "ACTURA=b.CODIGO_FACTURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join DETALLE_FACTURA_GUIA c on a.CODIGO_FACTURA=c."& _ 
                "CODIGO_FACTURA and c.CODIGO_DETALLE_FACTURA=b.CODIGO_DETALLE_FACTURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join "& _ 
                "DETALLE_FACTURA_REMITENTE d on a.CODIGO_FACTURA=d.CODIGO_FACTURA and d.CODIGO_DE"& _ 
                "TALLE_FACTURA=b.CODIGO_DETALLE_FACTURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join DETALLE_FACTURA_UNIDAD e on a."& _ 
                "CODIGO_FACTURA=e.CODIGO_FACTURA and e.CODIGO_DETALLE_FACTURA=b.CODIGO_DETALLE_FA"& _ 
                "CTURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join GUIA_TRANSPORTISTA f on c.CODIGO_GUIA=f.CODIGO_GUIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join "& _ 
                "CLIENTE g on g.CODIGO_CLIENTE=a.CODIGO_CLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join MONEDA h on h.CODIGO_M"& _ 
                "ONEDA=a.CODIGO_MONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join ESTADO i on i.CODIGO_ESTADO=b.TIPO_SERVICIO and"& _ 
                " i.TIPO_ESTADO=6"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA=@codigo_factura"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtFacturaCompletaDataTable, ByVal codigo_factura As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer) As rptLiquidaciones.dtFacturaCompletaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Dim dataTable As rptLiquidaciones.dtFacturaCompletaDataTable = New rptLiquidaciones.dtFacturaCompletaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRptFacturaRemitenteTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRptFacturaRemitente"
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_DETALLE_FACTURA", "CODIGO_DETALLE_FACTURA")
            tableMapping.ColumnMappings.Add("GUIA_REMITENTE", "GUIA_REMITENTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [DETALLE_FACTURA_REMITENTE] WHERE (([CODIGO_FACTURA] = @Original_CODI"& _ 
                "GO_FACTURA) AND ([CODIGO_DETALLE_FACTURA] = @Original_CODIGO_DETALLE_FACTURA) AN"& _ 
                "D ([GUIA_REMITENTE] = @Original_GUIA_REMITENTE))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GUIA_REMITENTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMITENTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [DETALLE_FACTURA_REMITENTE] ([CODIGO_FACTURA], [CODIGO_DETALLE_FACTUR"& _ 
                "A], [GUIA_REMITENTE]) VALUES (@CODIGO_FACTURA, @CODIGO_DETALLE_FACTURA, @GUIA_RE"& _ 
                "MITENTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, GUIA_REMITENTE FROM db"& _ 
                "o.DETALLE_FACTURA_REMITENTE WHERE (CODIGO_DETALLE_FACTURA = @CODIGO_DETALLE_FACT"& _ 
                "URA) AND (CODIGO_FACTURA = @CODIGO_FACTURA) AND (GUIA_REMITENTE = @GUIA_REMITENT"& _ 
                "E)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUIA_REMITENTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMITENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [DETALLE_FACTURA_REMITENTE] SET [CODIGO_FACTURA] = @CODIGO_FACTURA, [CODIG"& _ 
                "O_DETALLE_FACTURA] = @CODIGO_DETALLE_FACTURA, [GUIA_REMITENTE] = @GUIA_REMITENTE"& _ 
                " WHERE (([CODIGO_FACTURA] = @Original_CODIGO_FACTURA) AND ([CODIGO_DETALLE_FACTU"& _ 
                "RA] = @Original_CODIGO_DETALLE_FACTURA) AND ([GUIA_REMITENTE] = @Original_GUIA_R"& _ 
                "EMITENTE));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, GUIA_REMITENTE FROM "& _ 
                "dbo.DETALLE_FACTURA_REMITENTE WHERE (CODIGO_DETALLE_FACTURA = @CODIGO_DETALLE_FA"& _ 
                "CTURA) AND (CODIGO_FACTURA = @CODIGO_FACTURA) AND (GUIA_REMITENTE = @GUIA_REMITE"& _ 
                "NTE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUIA_REMITENTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMITENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GUIA_REMITENTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUIA_REMITENTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_DETALLE_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"GUIA_REMITENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"DETALLE"& _ 
                "_FACTURA_REMITENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_FACTURA=@codigo_factura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"and CODIGO_DETALLE_F"& _ 
                "ACTURA=@codigo_detalle"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_detalle", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtRptFacturaRemitenteDataTable, ByVal codigo_factura As Integer, ByVal codigo_detalle As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codigo_detalle,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer, ByVal codigo_detalle As Integer) As rptLiquidaciones.dtRptFacturaRemitenteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codigo_detalle,Integer)
            Dim dataTable As rptLiquidaciones.dtRptFacturaRemitenteDataTable = New rptLiquidaciones.dtRptFacturaRemitenteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As rptLiquidaciones.dtRptFacturaRemitenteDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As rptLiquidaciones) As Integer
            Return Me.Adapter.Update(dataSet, "dtRptFacturaRemitente")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODIGO_FACTURA As Integer, ByVal Original_CODIGO_DETALLE_FACTURA As Integer, ByVal Original_GUIA_REMITENTE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODIGO_FACTURA,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODIGO_DETALLE_FACTURA,Integer)
            If (Original_GUIA_REMITENTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GUIA_REMITENTE")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_GUIA_REMITENTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal GUIA_REMITENTE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODIGO_FACTURA,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_DETALLE_FACTURA,Integer)
            If (GUIA_REMITENTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GUIA_REMITENTE")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(GUIA_REMITENTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal GUIA_REMITENTE As String, ByVal Original_CODIGO_FACTURA As Integer, ByVal Original_CODIGO_DETALLE_FACTURA As Integer, ByVal Original_GUIA_REMITENTE As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODIGO_FACTURA,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_DETALLE_FACTURA,Integer)
            If (GUIA_REMITENTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("GUIA_REMITENTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(GUIA_REMITENTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CODIGO_FACTURA,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_CODIGO_DETALLE_FACTURA,Integer)
            If (Original_GUIA_REMITENTE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_GUIA_REMITENTE")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_GUIA_REMITENTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CODIGO_FACTURA As Integer, ByVal Original_CODIGO_DETALLE_FACTURA As Integer, ByVal Original_GUIA_REMITENTE As String) As Integer
            Return Me.Update(Original_CODIGO_FACTURA, Original_CODIGO_DETALLE_FACTURA, Original_GUIA_REMITENTE, Original_CODIGO_FACTURA, Original_CODIGO_DETALLE_FACTURA, Original_GUIA_REMITENTE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRptFacturaUnidadTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRptFacturaUnidad"
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_DETALLE_FACTURA", "CODIGO_DETALLE_FACTURA")
            tableMapping.ColumnMappings.Add("PLACA_UNIDAD", "PLACA_UNIDAD")
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA_GUIA", "CODIGO_FACTURA_GUIA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [DETALLE_FACTURA_UNIDAD] WHERE (([CODIGO_FACTURA] = @Original_CODIGO_"& _ 
                "FACTURA) AND ([CODIGO_DETALLE_FACTURA] = @Original_CODIGO_DETALLE_FACTURA) AND ("& _ 
                "[CODIGO_FACTURA_GUIA] = @Original_CODIGO_FACTURA_GUIA) AND ([PLACA_UNIDAD] = @Or"& _ 
                "iginal_PLACA_UNIDAD))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_FACTURA_GUIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA_GUIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLACA_UNIDAD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLACA_UNIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [DETALLE_FACTURA_UNIDAD] ([CODIGO_FACTURA], [CODIGO_DETALLE_FACTURA],"& _ 
                " [PLACA_UNIDAD]) VALUES (@CODIGO_FACTURA, @CODIGO_DETALLE_FACTURA, @PLACA_UNIDAD"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODIGO_FACTURA, CODIGO_DETALLE_FACTURA, CODIGO_FACTURA_GUIA, PLACA_UN"& _ 
                "IDAD FROM DETALLE_FACTURA_UNIDAD WHERE (CODIGO_DETALLE_FACTURA = @CODIGO_DETALLE"& _ 
                "_FACTURA) AND (CODIGO_FACTURA = @CODIGO_FACTURA) AND (CODIGO_FACTURA_GUIA = SCOP"& _ 
                "E_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLACA_UNIDAD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLACA_UNIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [DETALLE_FACTURA_UNIDAD] SET [CODIGO_FACTURA] = @CODIGO_FACTURA, [CODIGO_D"& _ 
                "ETALLE_FACTURA] = @CODIGO_DETALLE_FACTURA, [PLACA_UNIDAD] = @PLACA_UNIDAD WHERE "& _ 
                "(([CODIGO_FACTURA] = @Original_CODIGO_FACTURA) AND ([CODIGO_DETALLE_FACTURA] = @"& _ 
                "Original_CODIGO_DETALLE_FACTURA) AND ([CODIGO_FACTURA_GUIA] = @Original_CODIGO_F"& _ 
                "ACTURA_GUIA) AND ([PLACA_UNIDAD] = @Original_PLACA_UNIDAD));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODIGO_FACT"& _ 
                "URA, CODIGO_DETALLE_FACTURA, CODIGO_FACTURA_GUIA, PLACA_UNIDAD FROM DETALLE_FACT"& _ 
                "URA_UNIDAD WHERE (CODIGO_DETALLE_FACTURA = @CODIGO_DETALLE_FACTURA) AND (CODIGO_"& _ 
                "FACTURA = @CODIGO_FACTURA) AND (CODIGO_FACTURA_GUIA = @CODIGO_FACTURA_GUIA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLACA_UNIDAD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLACA_UNIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_DETALLE_FACTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO_FACTURA_GUIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA_GUIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLACA_UNIDAD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLACA_UNIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO_FACTURA_GUIA", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA_GUIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_DETALLE_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CODIGO_FACTURA_GUIA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"PLACA_"& _ 
                "UNIDAD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"DETALLE_FACTURA_UNIDAD"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(9)&"CODIGO_FACTURA=@codigo_factura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"and"& _ 
                " CODIGO_DETALLE_FACTURA=@codigo_detalle"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_detalle", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_DETALLE_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtRptFacturaUnidadDataTable, ByVal codigo_factura As Integer, ByVal codigo_detalle As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codigo_detalle,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer, ByVal codigo_detalle As Integer) As rptLiquidaciones.dtRptFacturaUnidadDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codigo_detalle,Integer)
            Dim dataTable As rptLiquidaciones.dtRptFacturaUnidadDataTable = New rptLiquidaciones.dtRptFacturaUnidadDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As rptLiquidaciones.dtRptFacturaUnidadDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As rptLiquidaciones) As Integer
            Return Me.Adapter.Update(dataSet, "dtRptFacturaUnidad")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODIGO_FACTURA As Integer, ByVal Original_CODIGO_DETALLE_FACTURA As Integer, ByVal Original_CODIGO_FACTURA_GUIA As Integer, ByVal Original_PLACA_UNIDAD As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODIGO_FACTURA,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODIGO_DETALLE_FACTURA,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO_FACTURA_GUIA,Integer)
            If (Original_PLACA_UNIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PLACA_UNIDAD")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PLACA_UNIDAD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal PLACA_UNIDAD As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODIGO_FACTURA,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODIGO_DETALLE_FACTURA,Integer)
            If (PLACA_UNIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PLACA_UNIDAD")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PLACA_UNIDAD,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODIGO_FACTURA As Integer, ByVal CODIGO_DETALLE_FACTURA As Integer, ByVal PLACA_UNIDAD As String, ByVal Original_CODIGO_FACTURA As Integer, ByVal Original_CODIGO_DETALLE_FACTURA As Integer, ByVal Original_CODIGO_FACTURA_GUIA As Integer, ByVal Original_PLACA_UNIDAD As String, ByVal CODIGO_FACTURA_GUIA As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODIGO_FACTURA,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODIGO_DETALLE_FACTURA,Integer)
            If (PLACA_UNIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PLACA_UNIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PLACA_UNIDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CODIGO_FACTURA,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_CODIGO_DETALLE_FACTURA,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_CODIGO_FACTURA_GUIA,Integer)
            If (Original_PLACA_UNIDAD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PLACA_UNIDAD")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_PLACA_UNIDAD,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODIGO_FACTURA_GUIA,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal PLACA_UNIDAD As String, ByVal Original_CODIGO_FACTURA As Integer, ByVal Original_CODIGO_DETALLE_FACTURA As Integer, ByVal Original_CODIGO_FACTURA_GUIA As Integer, ByVal Original_PLACA_UNIDAD As String) As Integer
            Return Me.Update(Original_CODIGO_FACTURA, Original_CODIGO_DETALLE_FACTURA, PLACA_UNIDAD, Original_CODIGO_FACTURA, Original_CODIGO_DETALLE_FACTURA, Original_CODIGO_FACTURA_GUIA, Original_PLACA_UNIDAD, Original_CODIGO_FACTURA_GUIA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtFacturaDetalleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtFacturaDetalle"
            tableMapping.ColumnMappings.Add("CODIGO_FACTURA", "CODIGO_FACTURA")
            tableMapping.ColumnMappings.Add("CODIGO_DETALLE_FACTURA", "CODIGO_DETALLE_FACTURA")
            tableMapping.ColumnMappings.Add("RAZON_CLIENTE", "RAZON_CLIENTE")
            tableMapping.ColumnMappings.Add("DIRECCION_CLIENTE", "DIRECCION_CLIENTE")
            tableMapping.ColumnMappings.Add("RUC_CLIENTE", "RUC_CLIENTE")
            tableMapping.ColumnMappings.Add("TELEFONO_CLIENTE", "TELEFONO_CLIENTE")
            tableMapping.ColumnMappings.Add("TOTAL_FACTURA", "TOTAL_FACTURA")
            tableMapping.ColumnMappings.Add("DETALLE_MONEDA", "DETALLE_MONEDA")
            tableMapping.ColumnMappings.Add("Column1", "NRO_LETRA")
            tableMapping.ColumnMappings.Add("FECHA_FACTURA", "FECHA_FACTURA")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("CONF_VEHICULAR", "CONF_VEHICULAR")
            tableMapping.ColumnMappings.Add("DESCRIPCION", "DESCRIPCION")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("ORIGEN", "ORIGEN")
            tableMapping.ColumnMappings.Add("DESTINO", "DESTINO")
            tableMapping.ColumnMappings.Add("PRECIO_UNITARIO", "PRECIO_UNITARIO")
            tableMapping.ColumnMappings.Add("DETALLE_ESTADO", "DETALLE_ESTADO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.LiquidacionPro.My.MySettings.Default.TRANSCARConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CODIGO_DETALLE_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.RAZON_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.DI"& _ 
                "RECCION_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.RUC_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"c.TELEFONO_CLIENTE,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.TOTAL_FACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(9)&"d.DETALLE_MONEDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"dbo.ufnConvertirNumeroLetra(a.TOTAL_FACTURA),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"a.FECHA_F"& _ 
                "ACTURA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CANTIDAD,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.CONF_VEHICULAR,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DESCRIPCION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.OBSERVACION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.ORIGEN,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.DESTINO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"b.PRECIO_UNITARIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"e.DETALLE_ESTADO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from"&Global.Microsoft.VisualBasic.ChrW(9)&"FACTURA"& _ 
                " a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join DETALLE_FACTURA b on a.CODIGO_FACTURA=b.CODIGO_FACTURA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join "& _ 
                "CLIENTE c on c.CODIGO_CLIENTE=a.CODIGO_CLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join MONEDA d on d.CODIGO_M"& _ 
                "ONEDA=a.CODIGO_MONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left"&Global.Microsoft.VisualBasic.ChrW(9)&"join ESTADO e on e.CODIGO_ESTADO=b.TIPO_SERVICIO and"& _ 
                " e.TIPO_ESTADO=6"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(9)&"a.CODIGO_FACTURA=@codigo_factura"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codigo_factura", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO_FACTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As rptLiquidaciones.dtFacturaDetalleDataTable, ByVal codigo_factura As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codigo_factura As Integer) As rptLiquidaciones.dtFacturaDetalleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(codigo_factura,Integer)
            Dim dataTable As rptLiquidaciones.dtFacturaDetalleDataTable = New rptLiquidaciones.dtFacturaDetalleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _dtRptFacturaRemitenteTableAdapter As dtRptFacturaRemitenteTableAdapter
        
        Private _dtRptFacturaUnidadTableAdapter As dtRptFacturaUnidadTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property dtRptFacturaRemitenteTableAdapter() As dtRptFacturaRemitenteTableAdapter
            Get
                Return Me._dtRptFacturaRemitenteTableAdapter
            End Get
            Set
                Me._dtRptFacturaRemitenteTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property dtRptFacturaUnidadTableAdapter() As dtRptFacturaUnidadTableAdapter
            Get
                Return Me._dtRptFacturaUnidadTableAdapter
            End Get
            Set
                Me._dtRptFacturaUnidadTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dtRptFacturaRemitenteTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dtRptFacturaRemitenteTableAdapter.Connection
                End If
                If ((Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dtRptFacturaUnidadTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dtRptFacturaUnidadTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As rptLiquidaciones, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.dtRptFacturaRemitente.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dtRptFacturaRemitenteTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.dtRptFacturaUnidad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dtRptFacturaUnidadTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As rptLiquidaciones, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.dtRptFacturaRemitente.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dtRptFacturaRemitenteTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.dtRptFacturaUnidad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dtRptFacturaUnidadTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As rptLiquidaciones, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.dtRptFacturaUnidad.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dtRptFacturaUnidadTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.dtRptFacturaRemitente.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dtRptFacturaRemitenteTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As rptLiquidaciones) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dtRptFacturaRemitenteTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dtRptFacturaUnidadTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dtRptFacturaRemitenteTableAdapter, Me._dtRptFacturaRemitenteTableAdapter.Connection)
                    Me._dtRptFacturaRemitenteTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dtRptFacturaRemitenteTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dtRptFacturaRemitenteTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dtRptFacturaRemitenteTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dtRptFacturaRemitenteTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dtRptFacturaUnidadTableAdapter, Me._dtRptFacturaUnidadTableAdapter.Connection)
                    Me._dtRptFacturaUnidadTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dtRptFacturaUnidadTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dtRptFacturaUnidadTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dtRptFacturaUnidadTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dtRptFacturaUnidadTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._dtRptFacturaRemitenteTableAdapter) Is Nothing) Then
                    Me._dtRptFacturaRemitenteTableAdapter.Connection = CType(revertConnections(Me._dtRptFacturaRemitenteTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dtRptFacturaRemitenteTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dtRptFacturaUnidadTableAdapter) Is Nothing) Then
                    Me._dtRptFacturaUnidadTableAdapter.Connection = CType(revertConnections(Me._dtRptFacturaUnidadTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dtRptFacturaUnidadTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
